(window.webpackJsonp=window.webpackJsonp||[]).push([[270],{1339:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/analytics_traffic-bd7f720aed16bcacb4d712ce0f2e4a87.png"},341:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return b})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),i=(a(0),a(363)),c={id:"index-analytics",title:"Building an Analytics dashboard app using Redis",sidebar_label:"Building an Analytics dashboard app using Redis",slug:"/howtos/analytics",authors:["ajeet"]},b={unversionedId:"howtos/analytics/index-analytics",id:"howtos/analytics/index-analytics",isDocsHomePage:!1,title:"Building an Analytics dashboard app using Redis",description:"Interactive analytics dashboards serve several purposes. They allow you to share data and provide you with all those vital information to make game-changing decisions at a faster pace. Building a real-time dynamic  dashboard using a traditional relational database might require a complex set of queries. By using a NoSQL database like Redis, you can build a powerful interactive and dynamic dashboard with a small number of Redis commands.",source:"@site/docs/howtos/analytics/index-analytics.mdx",slug:"/howtos/analytics",permalink:"/howtos/analytics",editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/analytics/index-analytics.mdx",version:"current",lastUpdatedAt:1651581727,sidebar_label:"Building an Analytics dashboard app using Redis",sidebar:"docs",previous:{title:"How to Use SSL/TLS With Redis Enterprise",permalink:"/howtos/security/"},next:{title:"Building a Popup Store  application using Redis",permalink:"/howtos/popupstore"}},o=[{value:"Step 1. Prepare the environment",id:"step-1-prepare-the-environment",children:[]},{value:"Step 2. Clone the repository",id:"step-2-clone-the-repository",children:[]},{value:"Step 3. Setting up backend",id:"step-3-setting-up-backend",children:[]},{value:"Step 4. Install dependencies",id:"step-4-install-dependencies",children:[]},{value:"Step 5. Run Docker Compose to install Redis",id:"step-5-run-docker-compose-to-install-redis",children:[]},{value:"Step 6. Run the backend",id:"step-6-run-the-backend",children:[]},{value:"Step 7. Setting up the frontend",id:"step-7-setting-up-the-frontend",children:[]},{value:"Step 8.  Install dependencies",id:"step-8--install-dependencies",children:[]},{value:"Step 9. Run the frontend",id:"step-9-run-the-frontend",children:[]},{value:"How does it work?",id:"how-does-it-work",children:[]},{value:"Cohort data",id:"cohort-data",children:[]},{value:"References",id:"references",children:[]}],l={toc:o};function p(e){var t=e.components,c=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,c,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Interactive analytics dashboards serve several purposes. They allow you to share data and provide you with all those vital information to make game-changing decisions at a faster pace. Building a real-time dynamic  dashboard using a traditional relational database might require a complex set of queries. By using a NoSQL database like Redis, you can build a powerful interactive and dynamic dashboard with a small number of Redis commands."),Object(i.b)("p",null,"Redis is an open source, in-memory, key-value data store most commonly used as a primary database, cache, message broker, and queue. Redis cache delivers sub-millisecond response times, enabling fast and powerful real-time applications in industries such as gaming, fintech, ad-tech, social media, healthcare, and IoT.\nThis tutorial shows a basic analytics dashboard app writen in NodeJS (JavaScript) that uses the Redis Bitmap data type."),Object(i.b)("div",{class:"text--center"},Object(i.b)("iframe",{width:"760",height:"415",src:"https://www.youtube.com/embed/Ugym4yUeIhA",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})),Object(i.b)("h3",{id:"step-1-prepare-the-environment"},"Step 1. Prepare the environment"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Install Node - v12.19.0"),Object(i.b)("li",{parentName:"ul"},"Install NPM - v6.14.8"),Object(i.b)("li",{parentName:"ul"},"Install Docker - v19.03.13 (optional)")),Object(i.b)("h3",{id:"step-2-clone-the-repository"},"Step 2. Clone the repository"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," git clone https://github.com/redis-developer/basic-analytics-dashboard-redis-bitmaps-nodejs\n")),Object(i.b)("h3",{id:"step-3-setting-up-backend"},"Step 3. Setting up backend"),Object(i.b)("p",null,"First we will be setting up some environment variables."),Object(i.b)("p",null,"Go to /server folder (cd ./server) and then execute the following command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," cp .env.example .env\n")),Object(i.b)("h3",{id:"step-4-install-dependencies"},"Step 4. Install dependencies"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," npm install\n")),Object(i.b)("h3",{id:"step-5-run-docker-compose-to-install-redis"},"Step 5. Run Docker Compose to install Redis"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," docker network create global\n docker-compose up -d --build\n")),Object(i.b)("p",null,"You may need to preface the docker command with ",Object(i.b)("inlineCode",{parentName:"p"},"sudo"),". If you don't want to use sudo, create a Unix group called docker and add users to it. When the Docker daemon starts, it creates a Unix socket accessible by members of the docker group.\nOnce the Redis database is up and running, you can connect to it using the ",Object(i.b)("inlineCode",{parentName:"p"},"redis-cli")," command."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"TIP")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"By default, Redis runs on port 6379 but you can change it by specifying an alternative host port in the docker compose file. "),Object(i.b)("li",{parentName:"ul"},"You can use a Redis configuration file and mount it as volumes in the docker compose YAML file. "),Object(i.b)("li",{parentName:"ul"},"You can connect to the Redis instance by using ",Object(i.b)("inlineCode",{parentName:"li"},"redis-cli -h hostname -p port")," command. "),Object(i.b)("li",{parentName:"ul"},"You can run the Redis ",Object(i.b)("inlineCode",{parentName:"li"},"INFO")," command to get statistics, metrics and health information from the Redis instance like cache, memory stats, Redis metrics and modules enabled. "),Object(i.b)("li",{parentName:"ul"},"Use the Redis ",Object(i.b)("inlineCode",{parentName:"li"},"MONITOR")," command to get a real time view of commands that clients send to Redis. ")))),Object(i.b)("h3",{id:"step-6-run-the-backend"},"Step 6. Run the backend"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," npm run dev\n")),Object(i.b)("h3",{id:"step-7-setting-up-the-frontend"},"Step 7. Setting up the frontend"),Object(i.b)("p",null,"Go to /client folder (cd ./client) and then:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," cp .env.example .env\n")),Object(i.b)("h3",{id:"step-8--install-dependencies"},"Step 8.  Install dependencies"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," npm install\n")),Object(i.b)("h3",{id:"step-9-run-the-frontend"},"Step 9. Run the frontend"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," npm run serve\n")),Object(i.b)("p",null,Object(i.b)("img",{alt:"analytics",src:a(1339).default})),Object(i.b)("h3",{id:"how-does-it-work"},"How does it work?"),Object(i.b)("h4",{id:"how-the-data-is-stored"},"How the data is stored:"),Object(i.b)("p",null,"The event data is stored in various keys and various data types."),Object(i.b)("p",null,"For each of time spans:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"year: like 2021"),Object(i.b)("li",{parentName:"ul"},"month: like 2021-03 (means March of 2021)"),Object(i.b)("li",{parentName:"ul"},"day: like 2021-03-03 (means 3rd March of 2021)"),Object(i.b)("li",{parentName:"ul"},"weekOfMonth: like 2021-03/4 (means 4th week of March 2021)"),Object(i.b)("li",{parentName:"ul"},"anytime")),Object(i.b)("p",null,"and for each of scopes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"source"),Object(i.b)("li",{parentName:"ul"},"action"),Object(i.b)("li",{parentName:"ul"},"source + action"),Object(i.b)("li",{parentName:"ul"},"action + page"),Object(i.b)("li",{parentName:"ul"},"userId + action"),Object(i.b)("li",{parentName:"ul"},"global")),Object(i.b)("p",null,"and for each of data types (types):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"count (Integer stored as String)"),Object(i.b)("li",{parentName:"ul"},"bitmap"),Object(i.b)("li",{parentName:"ul"},"set")),Object(i.b)("p",null,"Is generated key like: "),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," rab:{type}[:custom:{customName}][:user:{userId}][:source:{source}][:action:{action}][:page:{page}]:timeSpan:{timeSpan}\n")),Object(i.b)("p",null,"where values in [] are optional."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"For each generated key like rab:count:*, data is stored like: INCR {key}\nExample:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," INCR rab:count:action:addToCart:timeSpan:2015-12/3\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"For each generated key like: rab:set:*, data is stored like: SADD {key} {userId}\nExample:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," SADD rab:set:action:addToCart:timeSpan:2015-12/3 8\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"For each generated key like rab:bitmap:*, data is stored like: SETBIT {key} {userId} 1.\nExample:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," SETBIT rab:bitmap:action:addToCart:timeSpan:2015-12/3 8 1\n")))),Object(i.b)("h3",{id:"cohort-data"},"Cohort data"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"We store users who register and then bought some products (action order matters).")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"For each buy action in December we check if user performed register action before (register counter must be greater than zero).")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"If so, we set user bit to 1 like: SETBIT rab:bitmap:custom:cohort-buy:timeSpan:{timeSpan} {userId} 1")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"E.g User Id 2 bought 2 products on 2015-12-17. It won't be stored.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"E.g User Id 10 bought 1 product on 2015-12-17 and registered on 2015-12-16.\nIt will be stored like: SETBIT rab:bitmap:custom:cohort-buy:timeSpan:2015-12 10 1.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"We assume that user cannot buy without register."))),Object(i.b)("h4",{id:"retention-data"},"Retention data"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Retention means users who bought on two different dates"),Object(i.b)("li",{parentName:"ul"},"For each buy action we check if user bought more products anytime than bought on particular day (current purchase not included)."),Object(i.b)("li",{parentName:"ul"},"If so, we add user id to set like: SADD rab:set:custom:retention-buy:timeSpan:{timeSpan} {userId}"),Object(i.b)("li",{parentName:"ul"},"E.g User Id 5 bought 3 products on 2015-12-15. His retention won't be stored (products bought on particular day: 2, products bought anytime: 0)."),Object(i.b)("li",{parentName:"ul"},"E.g User Id 3 bought 1 product on 2015-12-15 and before - 1 product on 2015-12-13. His retention will be stored (products bought on particular day: 0, products bought anytime: 1) like: SADD rab:set:custom:retention-buy:timeSpan:2015-12 3.")),Object(i.b)("h4",{id:"how-the-data-is-accessed"},"How the data is accessed:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Total Traffic:")),Object(i.b)("p",null,"December: ",Object(i.b)("inlineCode",{parentName:"p"},"BITCOUNT rab:bitmap:custom:global:timeSpan:2015-12"),"\nX week of December: ",Object(i.b)("inlineCode",{parentName:"p"},"BITCOUNT rab:bitmap:custom:global:timeSpan:2015-12/{X}"),"\nExample:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," BITCOUNT rab:bitmap:custom:global:timeSpan:2015-12/3\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Traffic per Page ({page} is one of: homepage, product1, product2, product3):")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"December: BITCOUNT rab:bitmap:action:visit:page:{page}:timeSpan:2015-12\n")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," BITCOUNT rab:bitmap:action:visit:page:homepage:timeSpan:2015-12\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"X week of December: ")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"BITCOUNT rab:bitmap:action:visit:page:{page}:timeSpan:2015-12/{X}\n")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," BITCOUNT rab:bitmap:action:visit:page:product1:timeSpan:2015-12/2\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Traffic per Source ({source} is one of: google, Facebook, email, direct, referral, none):")),Object(i.b)("p",null,"December: "),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"BITCOUNT rab:bitmap:source:{source}:timeSpan:2015-12\n")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," BITCOUNT rab:bitmap:source:referral:timeSpan:2015-12\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"X week of December: ",Object(i.b)("inlineCode",{parentName:"li"},"BITCOUNT rab:bitmap:source:{source}:timeSpan:2015-12/{X}"))),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," BITCOUNT rab:bitmap:source:google:timeSpan:2015-12/1\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Trend traffic ({page} is one of: homepage, product1, product2, product3):")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"December: from ",Object(i.b)("inlineCode",{parentName:"p"},"BITCOUNT rab:bitmap:action:visit:{page}:timeSpan:2015-12-01")," to ",Object(i.b)("inlineCode",{parentName:"p"},"BITCOUNT rab:bitmap:action:visit:{page}:timeSpan:2015-12-31"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"1 Week of December: Similar as above, but from 2015-12-01 to 2015-12-07")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"2 Week of December: Similar as above, but from 2015-12-08 to 2015-12-14")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"3 Week of December: Similar as above, but from 2015-12-15 to 2015-12-21")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"4 Week of December: Similar as above, but from 2015-12-22 to 2015-12-28")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"5 Week of December: Similar as above, but from 2015-12-29 to 2015-12-31")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," BITCOUNT rab:bitmap:action:visit:homepage:timeSpan:2015-12-29 => BITCOUNT rab:bitmap:action:visit:homepage:timeSpan:2015-12-30 => BITCOUNT rab:bitmap:action:visit:homepage:timeSpan:2015-12-31\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Total products bought:")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"December: ",Object(i.b)("inlineCode",{parentName:"p"},"GET rab:count:action:buy:timeSpan:2015-12"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"X week of December: ",Object(i.b)("inlineCode",{parentName:"p"},"GET rab:count:action:buy:timeSpan:2015-12/{X}"),"\nExample:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," GET rab:count:action:buy:timeSpan:2015-12/1\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Total products added to cart:"))),Object(i.b)("p",null,"December: ",Object(i.b)("inlineCode",{parentName:"p"},"GET rab:count:action:addToCart:timeSpan:2015-12"),"\nX week of December: ",Object(i.b)("inlineCode",{parentName:"p"},"GET rab:count:action:addToCart:timeSpan:2015-12/{X}"),"\nExample:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," GET rab:count:action:addToCart:timeSpan:2015-12/1\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Shares of products bought ({productPage} is on of product1, product2, product3):")),Object(i.b)("p",null,"December: ",Object(i.b)("inlineCode",{parentName:"p"},"GET rab:count:action:buy:page:{productPage}:timeSpan:2015-12"),"\nExample:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," GET rab:count:action:buy:page:product3:timeSpan:2015-12\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"X week of December: ",Object(i.b)("inlineCode",{parentName:"p"},"GET rab:count:action:buy:page:{productPage}:timeSpan:2015-12/{X}"),"\nExample:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," GET rab:count:action:buy:page:product1:timeSpan:2015-12/2\n")))),Object(i.b)("h4",{id:"customer-and-cohort-analysis"},"Customer and Cohort Analysis"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"People who registered: BITCOUNT rab:bitmap:action:register:timeSpan:2015-12"),Object(i.b)("li",{parentName:"ul"},"People who register then bought (order matters): BITCOUNT rab:bitmap:custom:cohort-buy:timeSpan:2015-12"),Object(i.b)("li",{parentName:"ul"},"Dropoff: (People who register then bought / People who register) * 100 ","[%]"),Object(i.b)("li",{parentName:"ul"},"Customers who bought only specified product ({productPage} is one of: product1, product2, product3): ")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"SMEMBERS rab:set:action:buy:page:{productPage}:timeSpan:2015-12\n")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"})," SMEMBERS rab:set:action:buy:page:product2:timeSpan:2015-12\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Customers who bought Product1 and Product2: ")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"SINTER rab:set:action:buy:page:product1:timeSpan:anytime rab:set:action:buy:page:product2:timeSpan:anytime\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Customer Retention (customers who bought on the different dates): SMEMBERS rab:set:custom:retention-buy:timeSpan:anytime")),Object(i.b)("h3",{id:"references"},"References"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/redis-developer/basic-analytics-dashboard-redis-bitmaps-nodejs"}),"Complete Source Code")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://redis.io/topics/data-types-intro"}),"Use cases of Bitmaps"))))}p.isMDXComponent=!0},363:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},s=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),s=p(a),d=n,m=s["".concat(c,".").concat(d)]||s[d]||u[d]||i;return a?r.a.createElement(m,b(b({ref:t},l),{},{components:a})):r.a.createElement(m,b({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,c=new Array(i);c[0]=d;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:n,c[1]=b;for(var l=2;l<i;l++)c[l]=a[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);