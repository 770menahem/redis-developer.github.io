(window.webpackJsonp=window.webpackJsonp||[]).push([[278],{349:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var i=n(3),s=n(7),a=(n(0),n(393)),o=(n(394),{id:"index-identifying-issues",title:"5.3 Identifying Issues",sidebar_label:"5.3 Identifying Issues",slug:"/operate/redis-at-scale/observability/identifying-issues",isEditable:!1}),r={unversionedId:"operate/redis-at-scale/observability/identifying-issues/index-identifying-issues",id:"operate/redis-at-scale/observability/identifying-issues/index-identifying-issues",isDocsHomePage:!1,title:"5.3 Identifying Issues",description:"Besides the metrics from the data points from info, memory and the latency framework in the sections above, you may need to pull data from other sources when troubleshooting.",source:"@site/docs/operate/redis-at-scale/observability/identifying-issues/index-identifying-issues.mdx",slug:"/operate/redis-at-scale/observability/identifying-issues",permalink:"/operate/redis-at-scale/observability/identifying-issues",editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/operate/redis-at-scale/observability/identifying-issues/index-identifying-issues.mdx",version:"current",lastUpdatedAt:1652821384,sidebar_label:"5.3 Identifying Issues",sidebar:"docs",previous:{title:"5.2 Getting Redis Statistics",permalink:"/operate/redis-at-scale/observability/exercise-1"},next:{title:"Conclusion of Running Redis at Scale",permalink:"/operate/redis-at-scale/course-wrap-up/"}},l=[{value:"Availability",id:"availability",children:[]},{value:"Slow Log",id:"slow-log",children:[]},{value:"Scanning keys",id:"scanning-keys",children:[]},{value:"Setting up and using the Redis Log File",id:"setting-up-and-using-the-redis-log-file",children:[]}],c={toc:l};function u(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Besides the metrics from the data points from info, memory and the latency framework in the sections above, you may need to pull data from other sources when troubleshooting."),Object(a.b)("h2",{id:"availability"},"Availability"),Object(a.b)("p",null,"The Redis server will respond to the ",Object(a.b)("inlineCode",{parentName:"p"},"PING")," command when running properly:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"$ redis-cli -h redis.example.com -p 6379 PING\nPONG\n")),Object(a.b)("h2",{id:"slow-log"},"Slow Log"),Object(a.b)("p",null,"Redis Slow Log is a system to log queries that exceed a specific execution time which does not include I/O operations like client communication.  It is enabled by default with two configuration parameters."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"slowlog-log-slower-than 1000000\n")),Object(a.b)("p",null,"This indicates if there is an execution time longer than the time in microseconds, in this case one second, it will be logged. The slow log can be disabled using a value of -1.  It can also be set to log every command with a value of 0."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"slowlog-max-len 128\n")),Object(a.b)("p",null,"This sets the length of the slow log.  When a new command is logged the oldest one is removed from the queue."),Object(a.b)("p",null,"These values can also be changed at runtime using the ",Object(a.b)("inlineCode",{parentName:"p"},"CONFIG SET")," command."),Object(a.b)("p",null,"You can view the current length of the slow log using the ",Object(a.b)("inlineCode",{parentName:"p"},"LEN")," subcommand:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"redis.cloud:6379> slowlog len\n(integer) 11\n")),Object(a.b)("p",null,"Entries can be pulled off of the slow log using the ",Object(a.b)("inlineCode",{parentName:"p"},"GET")," subcommand."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),'redis.cloud:6379> slowlog get 2\n1) 1) (integer) 10\n   2) (integer) 1616372606\n   3) (integer) 600406\n   4) 1) "debug"\n      2) "sleep"\n      3) ".6"\n   5) "172.17.0.1:60546"\n   6) ""\n2) 1) (integer) 9\n   2) (integer) 1616372602\n   3) (integer) 600565\n   4) 1) "debug"\n      2) "sleep"\n      3) ".6"\n   5) "172.17.0.1:60546"\n   6) ""\n')),Object(a.b)("p",null,"The slow log can be reset using the ",Object(a.b)("inlineCode",{parentName:"p"},"RESET")," subcommand."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"redis.cloud:6379> slowlog reset\nOK\nredis.cloud:6379> slowlog len\n(integer) 0\n")),Object(a.b)("h2",{id:"scanning-keys"},"Scanning keys"),Object(a.b)("p",null,"There are a few options that can be passed to redis-cli that will trigger a keyspace analysis.  They use the ",Object(a.b)("inlineCode",{parentName:"p"},"SCAN")," command so they should be safe to run without impacting operations.  You can see in the output of all of them there is a throttling option if needed."),Object(a.b)("hr",null),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Big Keys:")," This option will scan the dataset for big keys and provide information about them."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"$ redis-cli --bigkeys \n\n# Scanning the entire keyspace to find biggest keys as well as\n# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\n# per 100 SCAN commands (not usually needed).\n\n[00.00%] Biggest string found so far '\"counter:__rand_int__\"' with 6 bytes\n[00.00%] Biggest hash   found so far '\"myhash\"' with 1 fields\n[00.00%] Biggest list   found so far '\"mylist\"' with 200000 items\n\n-------- summary -------\n\nSampled 4 keys in the keyspace!\nTotal key length in bytes is 48 (avg len 12.00)\n\nBiggest   list found '\"mylist\"' has 200000 items\nBiggest   hash found '\"myhash\"' has 1 fields\nBiggest string found '\"counter:__rand_int__\"' has 6 bytes\n\n1 lists with 200000 items (25.00% of keys, avg size 200000.00)\n1 hashs with 1 fields (25.00% of keys, avg size 1.00)\n2 strings with 9 bytes (50.00% of keys, avg size 4.50)\n0 streams with 0 entries (00.00% of keys, avg size 0.00)\n0 sets with 0 members (00.00% of keys, avg size 0.00)\n0 zsets with 0 members (00.00% of keys, avg size 0.00)\n")),Object(a.b)("hr",null),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Mem Keys:")," Similarly to big keys, mem keys will look for the biggest keys but also report on the average sizes."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"$ redis-cli --memkeys\n\n# Scanning the entire keyspace to find biggest keys as well as\n# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\n# per 100 SCAN commands (not usually needed).\n\n[00.00%] Biggest string found so far '\"counter:__rand_int__\"' with 62 bytes\n[00.00%] Biggest string found so far '\"key:__rand_int__\"' with 63 bytes\n[00.00%] Biggest hash   found so far '\"myhash\"' with 86 bytes\n[00.00%] Biggest list   found so far '\"mylist\"' with 860473 bytes\n\n-------- summary -------\n\nSampled 4 keys in the keyspace!\nTotal key length in bytes is 48 (avg len 12.00)\n\nBiggest   list found '\"mylist\"' has 860473 bytes\nBiggest   hash found '\"myhash\"' has 86 bytes\nBiggest string found '\"key:__rand_int__\"' has 63 bytes\n\n1 lists with 860473 bytes (25.00% of keys, avg size 860473.00)\n1 hashs with 86 bytes (25.00% of keys, avg size 86.00)\n2 strings with 125 bytes (50.00% of keys, avg size 62.50)\n0 streams with 0 bytes (00.00% of keys, avg size 0.00)\n0 sets with 0 bytes (00.00% of keys, avg size 0.00)\n0 zsets with 0 bytes (00.00% of keys, avg size 0.00)\n")),Object(a.b)("hr",null),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Hot Keys:")," The hot keys scan is only available when the ",Object(a.b)("inlineCode",{parentName:"p"},"maxmemory-policy")," is set to ",Object(a.b)("inlineCode",{parentName:"p"},"volatile-lfu")," or ",Object(a.b)("inlineCode",{parentName:"p"},"allkeys-lfu"),". If you need to identity hot keys you can add this argument to redis-cli."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),'$ redis-cli --hotkeys\n\n# Scanning the entire keyspace to find hot keys as well as\n# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\n# per 100 SCAN commands (not usually needed).\n\n[00.00%] Hot key \'"key:__rand_int__"\' found so far with counter 37\n\n-------- summary -------\n\nSampled 5 keys in the keyspace!\nhot key found with counter: 37  keyname: "key:__rand_int__"\n')),Object(a.b)("hr",null),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Monitor:")," The ",Object(a.b)("inlineCode",{parentName:"p"},"MONITOR")," command allows you to see a stream of every command running against your Redis instance."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),'127.0.0.1:6379 > monitor\nOK\n1616541192.039933 [0 127.0.0.1:57070] "PING"\n1616541276.052331 [0 127.0.0.1:57098] "set" "user:2398423hu" "KutMo"\n')),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note: because ",Object(a.b)("inlineCode",{parentName:"strong"},"MONITOR")," streams back all commands, its use comes at a cost. It has been known to reduce performance by up to 50% so use with caution!")),Object(a.b)("h2",{id:"setting-up-and-using-the-redis-log-file"},"Setting up and using the Redis Log File"),Object(a.b)("p",null,"The Redis log file is the other important log you need to be aware of. It contains useful information for troubleshooting configuration and deployment errors. If you don't configure Redis logging, troubleshooting will be significantly harder."),Object(a.b)("p",null,"Redis has four logging levels, which you can configure directly in ",Object(a.b)("inlineCode",{parentName:"p"},"redis.conf")," file. "),Object(a.b)("p",null,"Log Levels:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"WARNING")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"NOTICE")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"VERBOSE")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"DEBUG"))),Object(a.b)("p",null,"Redis also supports sending the log files to a remote logging server through the use of syslog."),Object(a.b)("p",null,"Remote logging is important to many security professionals. These remote logging servers are frequently used to monitor security events and manage incidents. These centralized log servers perform three common functions: ensure the integrity of your log files, ensure that logs are retained for a specific period of time, and to correlate logs against other system logs to discover potential attacks on your infrastructure."),Object(a.b)("p",null,"Let's set up logging on our Redis deployment. First we'll open our ",Object(a.b)("inlineCode",{parentName:"p"},"redis.conf")," file:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"$ sudo vi /etc/redis/redis.conf\n")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"redis.conf")," file has an entire section dedicated to logging."),Object(a.b)("p",null,"First, find the logfile directive in the ",Object(a.b)("inlineCode",{parentName:"p"},"redis.conf")," file. This will allow you to define the logging directory. For this example lets use ",Object(a.b)("inlineCode",{parentName:"p"},"/var/log/redis/redis.log"),"."),Object(a.b)("p",null,"If you'd like to use a remote logging server, then you'll need to uncomment the lines ",Object(a.b)("inlineCode",{parentName:"p"},"syslog-enabled"),", ",Object(a.b)("inlineCode",{parentName:"p"},"syslog-ident")," and ",Object(a.b)("inlineCode",{parentName:"p"},"syslog-facility"),", and ensure that ",Object(a.b)("inlineCode",{parentName:"p"},"syslog-enabled")," is set to yes."),Object(a.b)("p",null,"Next, we'll restart the Redis server."),Object(a.b)("p",null,"You should see the log events indicating that Redis is starting."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"$ sudo tail -f /var/log/redis/redis.log\n")),Object(a.b)("p",null,"And next let's check that we are properly writing to syslog. You should see these same logs."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-bash"}),"$ less /var/log/syslog | grep redis\n")),Object(a.b)("p",null,"Finally, you\u2019ll need to send your logs to your remote logging server to ensure your logs will be backed up to this server. To do this, you\u2019ll also have to modify the rsyslog configuration. This configuration varies depending on your remote logging server provider."))}u.isMDXComponent=!0},393:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return p}));var i=n(0),s=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,s=function(e,t){if(null==e)return{};var n,i,s={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=s.a.createContext({}),u=function(e){var t=s.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},b=function(e){var t=u(e.components);return s.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},g=s.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=u(n),g=i,p=b["".concat(o,".").concat(g)]||b[g]||d[g]||a;return n?s.a.createElement(p,r(r({ref:t},c),{},{components:n})):s.a.createElement(p,r({ref:t},c))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:i,o[1]=r;for(var c=2;c<a;c++)o[c]=n[c];return s.a.createElement.apply(null,o)}return s.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},394:function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return o}));var i=n(21),s=n(401);function a(){var e=Object(i.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,a=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,i){var a=void 0===i?{}:i,o=a.forcePrependBaseUrl,r=void 0!==o&&o,l=a.absolute,c=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if(Object(s.b)(n))return n;if(r)return t+n;var u=n.startsWith(t)?n:t+n.replace(/^\//,"");return c?e+u:u}(a,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,a().withBaseUrl)(e,t)}},401:function(e,t,n){"use strict";function i(e){return!0===/^(\w*:|\/\/)/.test(e)}function s(e){return void 0!==e&&!i(e)}n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return s}))}}]);