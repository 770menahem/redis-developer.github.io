(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{256:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(334)),i={id:"index-deno",title:"Deno and Redis",sidebar_label:"Deno",slug:"/develop/deno/"},l={unversionedId:"develop/deno/index-deno",id:"develop/deno/index-deno",isDocsHomePage:!1,title:"Deno and Redis",description:"With over 80,000 stars and 670+ contributors, Deno is a popular modern runtime for JavaScript and TypeScript. It is built on V8, an open-source JavaScript engine developed by the Chromium Project for Google Chrome and Chromium web browsers.",source:"@site/docs/develop/deno/index.deno.mdx",slug:"/develop/deno/",permalink:"/develop/deno/",editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/deno/index.deno.mdx",version:"current",lastUpdatedAt:1646209581,sidebar_label:"Deno",sidebar:"docs",previous:{title:"Php and Redis",permalink:"/develop/php/"},next:{title:"Explore Your Data",permalink:"/explore"}},c=[{value:"Features of Deno",id:"features-of-deno",children:[]},{value:"Getting Started",id:"getting-started",children:[]},{value:"Step 1. Get Deno",id:"step-1-get-deno",children:[]},{value:"Step 2. Verify if Deno is properly installed",id:"step-2-verify-if-deno-is-properly-installed",children:[]},{value:"Step 3. Run Redis locally",id:"step-3-run-redis-locally",children:[]},{value:"Step 4. Create an empty file with the following content",id:"step-4-create-an-empty-file-with-the-following-content",children:[]},{value:"Step 5. Executing the script",id:"step-5-executing-the-script",children:[]},{value:"Additional references:",id:"additional-references",children:[]}],d={toc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/denoland/deno"}),"With over 80,000 stars and 670+ contributors"),", Deno is a popular modern runtime for JavaScript and TypeScript. It is built on ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://v8.dev/"}),"V8"),", an open-source JavaScript engine developed by the Chromium Project for Google Chrome and Chromium web browsers. "),Object(a.b)("h3",{id:"features-of-deno"},"Features of Deno"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Deno is secure by default. It executes code in a sandbox environment, disallowing runtime access to the underlying filesystem, environment variables and scripts. "),Object(a.b)("li",{parentName:"ul"},"Deno supports both JavaScript and TypeScript out of the box."),Object(a.b)("li",{parentName:"ul"},"Deno ships as a single executable with no dependencies."),Object(a.b)("li",{parentName:"ul"},"Comes with built-in utilities such as a dependency inspector (deno info) and a code formatter (deno fmt).")),Object(a.b)("h3",{id:"getting-started"},"Getting Started"),Object(a.b)("p",null,Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://deno.land/x"}),"deno.land/x")," is a hosting service for Deno scripts. It caches releases of open source modules stored on GitHub and serves them at one easy-to-remember domain. These modules contain small scripts that demonstrate use of Deno and its standard module."),Object(a.b)("p",null,"The basic format of code URLs is "),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"https://deno.land/x/IDENTIFIER@VERSION/FILE_PATH \n")),Object(a.b)("h4",{id:"example"},"Example:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"https://deno.land/std@0.126.0/examples\n")),Object(a.b)("p",null,"In order to use Redis with Deno you will need a Deno Redis client. In the following sections, we will demonstrate the use of ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://deno.land/x/redis@v0.25.3"}),"an experimental implementation of a Redis client for Deno"),". "),Object(a.b)("h3",{id:"step-1-get-deno"},"Step 1. Get Deno"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"brew install deno\n")),Object(a.b)("h3",{id:"step-2-verify-if-deno-is-properly-installed"},"Step 2. Verify if Deno is properly installed"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"deno -V\ndeno 1.19.0\n")),Object(a.b)("h3",{id:"step-3-run-redis-locally"},"Step 3. Run Redis locally"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"docker run -d -p 6379:6379 redislabs/redismod\n")),Object(a.b)("h3",{id:"step-4-create-an-empty-file-with-the-following-content"},"Step 4. Create an empty file with the following content"),Object(a.b)("p",null,"The following code creates a connection to Redis using Deno:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'import { connect } from "https://deno.land/x/redis/mod.ts";\nconst redis = await connect({\n  hostname: "127.0.0.1",\n  port: 6379,\n});\nconst ok = await redis.set("foo", "bar");\nconst foo = await redis.get("foo");\n')),Object(a.b)("p",null,"Replace the values of hostname and port to match those of your Redis database, and add an extra password field if needed."),Object(a.b)("h3",{id:"step-5-executing-the-script"},"Step 5. Executing the script"),Object(a.b)("p",null,"Deno can grab scripts from multiple sources.  For example, you can provide a filename, a URL, or'-' to read the file from stdin.\nYou can run a JavaScript or TypeScript program by executing ",Object(a.b)("inlineCode",{parentName:"p"},"deno run"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"deno run --allow-net redis.ts\n\n")),Object(a.b)("p",null,"When you run the script, the value of ",Object(a.b)("inlineCode",{parentName:"p"},"foo")," should be output. You can verify this by running the monitor command:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),'monitor\nOK\n1645524375.012602 [0 172.17.0.1:63288] "SET" "foo" "bar"\n1645524375.020807 [0 172.17.0.1:63288] "GET" "foo"\n\n')),Object(a.b)("h3",{id:"additional-references"},"Additional references:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://deno.land/manual@v1.19.0/getting_started/command_line_interface"}),"Getting Started with Deno Command Line Interface")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/denoland/deno/releases"}),"Deno Releases Page")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/denoland/deno"}),"Deno GitHub Repository")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://deno.land/manual@v1.19.0/runtime"}),"Deno Runtimes"))),Object(a.b)("div",null,Object(a.b)("a",{href:"https://launchpad.redis.com",target:"_blank",rel:"noopener",className:"link"}," ",Object(a.b)("img",{src:"/img/launchpad.png",className:"thumb",loading:"lazy",alt:"Redis Launchpad"}))))}p.isMDXComponent=!0},334:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=o.a.createContext({}),p=function(e){var t=o.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return o.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),s=p(n),u=r,m=s["".concat(i,".").concat(u)]||s[u]||b[u]||a;return n?o.a.createElement(m,l(l({ref:t},d),{},{components:n})):o.a.createElement(m,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);