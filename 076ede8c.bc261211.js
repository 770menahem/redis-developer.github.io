(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{315:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=i.a.createContext({}),l=function(e){var t=i.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return i.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),b=r,h=u["".concat(a,".").concat(b)]||u[b]||p[b]||o;return n?i.a.createElement(h,s(s({ref:t},d),{},{components:n})):i.a.createElement(h,s({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var d=2;d<o;d++)a[d]=n[d];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(3),i=n(7),o=(n(0),n(315)),a={id:"index-usingpython",title:"How to store JSON documents in Redis with Python",sidebar_label:"RedisJSON and Python",slug:"/howtos/redisjson/using-python"},s={unversionedId:"howtos/redisjson/using-python/index-usingpython",id:"howtos/redisjson/using-python/index-usingpython",isDocsHomePage:!1,title:"How to store JSON documents in Redis with Python",description:"RedisJSON is a source-available Redis module that lets you store, manipulate, and query JSON documents in Redis. The standard Redis Python client (v4.0 or greater) supports all of the features of RedisJSON, and in this tutorial, we'll see how to get started with them.",source:"@site/docs/howtos/redisjson/using-python/index-usingpython.mdx",slug:"/howtos/redisjson/using-python",permalink:"/howtos/redisjson/using-python",editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/redisjson/using-python/index-usingpython.mdx",version:"current",sidebar_label:"RedisJSON and Python",sidebar:"docs",previous:{title:"Getting Started with RedisJSON",permalink:"/howtos/redisjson/getting-started"},next:{title:"How to cache JSON data in Redis with Node.js",permalink:"/howtos/redisjson/using-nodejs"}},c=[{value:"Getting started with RedisJSON",id:"getting-started-with-redisjson",children:[]},{value:"Verify that the RedisJSON module is loaded",id:"verify-that-the-redisjson-module-is-loaded",children:[]},{value:"Load the latest version of <code>redis-py</code>",id:"load-the-latest-version-of-redis-py",children:[]},{value:"Storing JSON in Redis",id:"storing-json-in-redis",children:[{value:"Run the code",id:"run-the-code",children:[]}]},{value:"Verify that the JSON document has been added to Redis",id:"verify-that-the-json-document-has-been-added-to-redis",children:[]},{value:"Fetching specific fields from a JSON document",id:"fetching-specific-fields-from-a-json-document",children:[{value:"References",id:"references",children:[]}]}],d={toc:c};function l(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://oss.redis.com/redisjson/"}),"RedisJSON")," is a source-available Redis module that lets you store, manipulate, and query JSON documents in Redis. The standard Redis Python client (v4.0 or greater) supports all of the features of RedisJSON, and in this tutorial, we'll see how to get started with them."),Object(o.b)("h2",{id:"getting-started-with-redisjson"},"Getting started with RedisJSON"),Object(o.b)("p",null,"To run the examples below, you'll need to ensure that you have an instance of Redis that includes RedisJSON. If you're developing locally, you can use Docker for this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"})," docker run -p 6379:6379 --name redis-redisjson redislabs/rejson:latest\n")),Object(o.b)("h2",{id:"verify-that-the-redisjson-module-is-loaded"},"Verify that the RedisJSON module is loaded"),Object(o.b)("p",null,"Connect to Redis using ",Object(o.b)("inlineCode",{parentName:"p"},"redis-cli"),", and run the ",Object(o.b)("inlineCode",{parentName:"p"},"info modules")," command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"})," redis-cli\n 127.0.0.1:6379> info modules\n # Modules\n module:name=ReJSON,ver=20004,api=1,filters=0,usedby=[],using=[],options=[]\n 127.0.0.1:6379> \n")),Object(o.b)("p",null,"Ensure that you're running RedisJSON v2.0 or greater (here indicated as ",Object(o.b)("inlineCode",{parentName:"p"},"20004"),")."),Object(o.b)("h2",{id:"load-the-latest-version-of-redis-py"},"Load the latest version of ",Object(o.b)("inlineCode",{parentName:"h2"},"redis-py")),Object(o.b)("p",null,"You'll need ",Object(o.b)("inlineCode",{parentName:"p"},"redis-py")," version 4.0 or later. If you're using ",Object(o.b)("inlineCode",{parentName:"p"},"pipenv"),", you can install the client library like so:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"pipenv install redis\n")),Object(o.b)("p",null,"Then you can run ",Object(o.b)("inlineCode",{parentName:"p"},"pipenv graph")," to make sure you're running the latest version of the client:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"$ pipenv graph\nredis==4.0.2\n")),Object(o.b)("h2",{id:"storing-json-in-redis"},"Storing JSON in Redis"),Object(o.b)("p",null,"Let's consider a simple JSON document structure representing a user:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),' {\n  "name": "Jane",\n  "age": 33,\n  "location: "Chawton"\n }\n')),Object(o.b)("p",null,"Here's the Python code to store this document in Redis using RedisJSON:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import redis\nfrom redis.commands.json.path import Path\n\nclient = redis.Redis(host='localhost', port=6379, db=0)\n\njane = {\n     'name': \"Jane\", \n     'Age': 33, \n     'Location': \"Chawton\"\n   }\n\nclient.json().set('person:1', Path.rootPath(), jane)\n\nresult = client.json().get('person:1')\nprint(result)\n")),Object(o.b)("p",null,"In the code above, we first connect to Redis and store a reference to the connection in the ",Object(o.b)("inlineCode",{parentName:"p"},"client")," variable."),Object(o.b)("p",null,"Next, we create a Python dictionary to represent a person object."),Object(o.b)("p",null,"And finally, we store the object in Redis using the ",Object(o.b)("inlineCode",{parentName:"p"},"json().set()")," method. The first argument, ",Object(o.b)("inlineCode",{parentName:"p"},"person:1")," is the name of the key that will reference the JSON. The second argument is a JSON path. We use ",Object(o.b)("inlineCode",{parentName:"p"},"Path.rootPath()"),", as this is a new object. Finally, we pass in the Python dictionary, which will be serialized to JSON."),Object(o.b)("p",null,"To retrieve the JSON object, we run ",Object(o.b)("inlineCode",{parentName:"p"},"json().get()"),", passing in the key. The result is a Python dictionary representing the JSON object stored in Redis."),Object(o.b)("h3",{id:"run-the-code"},"Run the code"),Object(o.b)("p",null,"If you copy the code above into a file called ",Object(o.b)("inlineCode",{parentName:"p"},"main.py"),", you can run the code like so:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ pipenv python run main.py\n")),Object(o.b)("h2",{id:"verify-that-the-json-document-has-been-added-to-redis"},"Verify that the JSON document has been added to Redis"),Object(o.b)("p",null,"Start ",Object(o.b)("inlineCode",{parentName:"p"},"redis-cli")," to connect to your Redis instance. Then run the following command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),'localhost:6379> json.get person:1\n"{\\"name\\":\\"Jane\\",\\"Age\\":33,\\"Location\\":\\"Chawton\\"}"\n')),Object(o.b)("h2",{id:"fetching-specific-fields-from-a-json-document"},"Fetching specific fields from a JSON document"),Object(o.b)("p",null,"You can use RedisJSON to fetch specific fields from a document by specifying a path. For example, here's how to return only the ",Object(o.b)("inlineCode",{parentName:"p"},"name")," field:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"name = client.json().get('person:1', Path('.name'))\nprint(name)\n")),Object(o.b)("p",null,'This code will print the string "Jane".'),Object(o.b)("p",null,"You can execute the same query from the command line:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),'localhost:6379> json.get person:1 \'.name\'\n"\\"Jane\\""\n')),Object(o.b)("h3",{id:"references"},"References"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://university.redis.com/courses/ru204/"}),"RU204: Storing, Querying and Indexing JSON at Speed")," - a course at Redis University"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"/howtos/redisjson/using-nodejs"}),"Importing JSON data into Redis using NodeJS")),Object(o.b)("li",{parentName:"ul"},"Learn more about ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://redisjson.io"}),"RedisJSON")," in the Quickstart tutorial")))}l.isMDXComponent=!0}}]);