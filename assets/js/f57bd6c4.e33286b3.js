"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[5439],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,b=p["".concat(l,".").concat(m)]||p[m]||c[m]||i;return n?r.createElement(b,s(s({ref:t},d),{},{components:n})):r.createElement(b,s({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},297:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),s=["components"],o={id:"index-usingruby",title:"How to cache JSON data in Redis with Ruby",sidebar_label:"RedisJSON and Ruby",slug:"/howtos/redisjson/using-ruby",authors:["ajeet"]},l=void 0,u={unversionedId:"howtos/redisjson/using-ruby/index-usingruby",id:"howtos/redisjson/using-ruby/index-usingruby",title:"How to cache JSON data in Redis with Ruby",description:"rejson-rb is a package that allows storing, updating and querying objects as JSON documents in a Redis database that is extended with the RedisJSON module.",source:"@site/docs/howtos/redisjson/using-ruby/index-usingruby.mdx",sourceDirName:"howtos/redisjson/using-ruby",slug:"/howtos/redisjson/using-ruby",permalink:"/howtos/redisjson/using-ruby",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/redisjson/using-ruby/index-usingruby.mdx",tags:[],version:"current",lastUpdatedAt:1655485542,formattedLastUpdatedAt:"6/17/2022",frontMatter:{id:"index-usingruby",title:"How to cache JSON data in Redis with Ruby",sidebar_label:"RedisJSON and Ruby",slug:"/howtos/redisjson/using-ruby",authors:["ajeet"]},sidebar:"docs",previous:{title:"RedisJSON and Node.js",permalink:"/howtos/redisjson/using-nodejs"},next:{title:"RedisJSON and Go",permalink:"/howtos/redisjson/using-go"}},d={},c=[{value:"Step 1. Run RedisJSON docker container",id:"step-1-run-redisjson-docker-container",level:3},{value:"Step 2. Install Ruby",id:"step-2-install-ruby",level:3},{value:"Step 3. Install RedisJSON Gem",id:"step-3-install-redisjson-gem",level:3},{value:"Step 4. Create a ruby file",id:"step-4-create-a-ruby-file",level:3},{value:"Step 5. Execute the script",id:"step-5-execute-the-script",level:3},{value:"References",id:"references",level:3}],p={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"rejson-rb is a package that allows storing, updating and querying objects as JSON documents in a Redis database that is extended with the RedisJSON module.\nThe package extends redis-rb's interface with RedisJSON's API, and performs on-the-fly serialization/deserialization of objects to/from JSON."),(0,i.kt)("h3",{id:"step-1-run-redisjson-docker-container"},"Step 1. Run RedisJSON docker container"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," docker run -d -p 6379:6379 redislabs/redismod:latest\n")),(0,i.kt)("h3",{id:"step-2-install-ruby"},"Step 2. Install Ruby"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," brew install ruby\n")),(0,i.kt)("h3",{id:"step-3-install-redisjson-gem"},"Step 3. Install RedisJSON Gem"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," gem install rejson-rb\n")),(0,i.kt)("h3",{id:"step-4-create-a-ruby-file"},"Step 4. Create a ruby file"),(0,i.kt)("p",null,"Copy the below content and paste it in a file called 'employee.rb'."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},' require \'rejson\'\n\n rcl = Redis.new # Get a redis client\n\n # Get/Set/Delete keys\n obj = {\n      \'id\': "42",\n       \'name\': "Paul John",\n       \'email\': "paul.john@gmail.com",\n       \'address\': {\n           \'city\': \'London\'\n         }\n       }\n\n rcl.json_set("employee", Rejson::Path.root_path, obj)\n\n rcl.json_set("employee", Rejson::Path.new(".id"), 43)\n\n rcl.json_get "employee", Rejson::Path.root_path\n\n rcl.json_del "employee", ".address.city"\n')),(0,i.kt)("p",null,"The above script uses RedisJSON commands to set the objects, alter the id to 43 and then perform the delete operation using 'json_del'"),(0,i.kt)("h3",{id:"step-5-execute-the-script"},"Step 5. Execute the script"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," ruby employee.rb\n")),(0,i.kt)("p",null,"You can verify what's happening in the background by running the monitor command in Redis CLI shell:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},' 127.0.0.1:6379> monitor\n OK\n 1627619198.040000 [0 172.17.0.1:57550] "JSON.SET" "employee" "." "{\\"id\\":\\"42\\",\\"name\\":\\"Paul John\\",\\"email\\":\\"paul.john@gmail.com\\",\\"address\\":{\\"city\\":\\"London\\"}}"\n 1627619198.040876 [0 172.17.0.1:57550] "JSON.SET" "employee" ".id" "43"\n1627619198.042132 [0 172.17.0.1:57550] "JSON.GET" "employee" "."\n1627619198.042741 [0 172.17.0.1:57550] "JSON.DEL" "employee" ".address.city"\n')),(0,i.kt)("h3",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://university.redis.com/courses/ru204/"},"RU204: Storing, Querying and Indexing JSON at Speed")," - a course at Redis University"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/howtos/ratelimiting/"},"Rate Limiting app in Ruby and Redis")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/develop/ruby/"},"Ruby and Redis"))))}m.isMDXComponent=!0}}]);