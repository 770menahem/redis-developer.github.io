"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[1014,3007,1849],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=d(a),u=o,m=h["".concat(c,".").concat(u)]||h[u]||l[u]||r;return a?n.createElement(m,s(s({ref:t},p),{},{components:a})):n.createElement(m,s({ref:t},p))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,s=new Array(r);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var d=2;d<r;d++)s[d]=a[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},98755:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294);const o=function(e){let{cta:t,image:a,title:o,children:r}=e;return n.createElement(n.Fragment,null,n.createElement("p",null,"Below you will find an excerpt from the e-book."," ",n.createElement("a",{href:t,target:"_blank"},"Click here to download the full e-book.")),n.createElement("div",{className:"margin-bottom--xs"},n.createElement("img",{src:a,loading:"lazy",alt:o})),r,n.createElement("p",null,"I\u2019m sure you\u2019re eager to learn more, so"," ",n.createElement("a",{href:t,target:"_blank"},"click here to download the full e-book.")))}},45452:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>p,toc:()=>h});var n=a(87462),o=(a(67294),a(3905)),r=a(98755),s=a(94047),i=a(87269);const c={id:"three-caching-design-patterns",title:"3 design patterns to speed up MEAN and MERN stack applications",image:"/img/ebooks/three-caching-design-patterns/three-caching-design-patterns.png",sidebar_label:"3 design patterns to speed up MEAN and MERN stack applications",slug:"/ebooks/three-caching-design-patterns",editUrl:!1,showLastUpdateTime:!1},d=void 0,p={unversionedId:"ebooks/three-caching-design-patterns",id:"ebooks/three-caching-design-patterns",title:"3 design patterns to speed up MEAN and MERN stack applications",description:"<Excerpt",source:"@site/docs/ebooks/three-caching-design-patterns.mdx",sourceDirName:"ebooks",slug:"/ebooks/three-caching-design-patterns",permalink:"/ebooks/three-caching-design-patterns",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/ebooks/three-caching-design-patterns.mdx",tags:[],version:"current",lastUpdatedAt:1682106687,formattedLastUpdatedAt:"Apr 21, 2023",frontMatter:{id:"three-caching-design-patterns",title:"3 design patterns to speed up MEAN and MERN stack applications",image:"/img/ebooks/three-caching-design-patterns/three-caching-design-patterns.png",sidebar_label:"3 design patterns to speed up MEAN and MERN stack applications",slug:"/ebooks/three-caching-design-patterns",editUrl:!1,showLastUpdateTime:!1},sidebar:"docs",previous:{title:"NoSQL Data Modeling Patterns",permalink:"/ebooks/8-nosql-data-modeling-patterns"}},l={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Building a movie application",id:"building-a-movie-application",level:2},{value:"The master data-lookup pattern",id:"the-master-data-lookup-pattern",level:2},{value:"Use cases",id:"use-cases",level:3},{value:"Demo",id:"demo",level:3},{value:"Code",id:"code",level:3},{value:"Download the E-book",id:"download-the-e-book",level:2}],u={toc:h};function m(e){let{components:t,...d}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,d,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(r.Z,{cta:"https://redis.com/docs/three-design-patterns-to-speed-up-mean-and-mern-stack-applications/",image:c.image,title:c.title,mdxType:"Excerpt"},(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"If you don't design and build software with attention to performance, your applications can encounter significant bottlenecks when they go into production.")),(0,o.kt)("p",null,"Over time, the development community has learned common techniques that work as reliable ",(0,o.kt)("strong",{parentName:"p"},"design patterns")," to solve well-understood problems, including application performance."),(0,o.kt)("p",null,"So what are design patterns? They are recommended practices to solve recurring design problems in software systems. A design pattern has four parts: a name, a problem description (a particular set of conditions to which the pattern applies), a solution (the best general strategy for resolving the problem), and a set of consequences."),(0,o.kt)("p",null,"Two development stacks that have become popular ways to build Node.js applications are the ",(0,o.kt)("strong",{parentName:"p"},"MEAN")," stack and the ",(0,o.kt)("strong",{parentName:"p"},"MERN")," stack. The MEAN stack is made up of the MongoDB database, the Express and Angular.js frameworks, and Node.js. It is a pure JavaScript stack that helps developers create every part of a website or application. In contrast, the MERN stack is made up of MongoDB, the Express and ReactJS frameworks, and Node.js."),(0,o.kt)("p",null,"Both stacks work well, which accounts for their popularity. But it doesn't mean the software generated runs as fast as it can\u2014or as fast as it needs to."),(0,o.kt)("p",null,"In this post, we share one popular design pattern that developers use with Redis to improve application performance with MEAN and MERN stack applications: the ",(0,o.kt)("inlineCode",{parentName:"p"},"master data-lookup pattern"),". We explain the pattern in detail and accompany it with an overview, typical use cases, and a code example. Our intent is to help you understand when and how to use this particular pattern in your own software development. The Ebook has other patterns too like ",(0,o.kt)("inlineCode",{parentName:"p"},"The cache-aside pattern")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"The write-behind pattern")),(0,o.kt)("h2",{id:"building-a-movie-application"},"Building a movie application"),(0,o.kt)(s.default,{mdxType:"CachingMovieAppDesign"}),(0,o.kt)("p",null,"This tutorial uses a GitHub sample demo that was built using the following tools:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Frontend"),": ReactJS (18.2.0)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Backend"),": Node.js (16.17.0)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Database"),": MongoDB"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Cache and database"),": Redis stack (using Docker)")),(0,o.kt)(i.default,{mdxType:"SourceCodeMovieApp"}),(0,o.kt)("h2",{id:"the-master-data-lookup-pattern"},"The master data-lookup pattern"),(0,o.kt)("p",null,"One ongoing developer challenge is to (swiftly) create, read, update, and (possibly) delete data that lives long, changes infrequently, and is regularly referenced by other data, directly or indirectly. That's a working definition of master data, especially when it also represents the organization's core data that is considered essential for its operations."),(0,o.kt)("p",null,"Master data generally changes infrequently. Country lists, genres, and movie languages usually stay the same. That presents an opportunity to speed things up. You can address access and manipulation operations so that ",(0,o.kt)("a",{parentName:"p",href:"https://redis.com/blog/database-consistency/"},"data consistency")," is preserved and data access happens quickly."),(0,o.kt)("p",null,"From a developer's point of view, master data lookup refers to the process by which master data is accessed in business transactions, in application setup, and any other way that software retrieves the information. Examples of master data lookup include fetching data for user interface (UI) elements (such as drop-down dialogs, select values, multi-language labels), fetching constants, user access control, theme, and other product configuration. And you can do that even when you rely primarily on MongoDB as a persistent data store."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"pattern",src:a(56251).Z,width:"1163",height:"285"})),(0,o.kt)("p",null,"To serve master data from Redis, preload the data from MongoDB."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Read the master data from MongoDB on application startup and store a copy of the data in Redis. This pre-caches the data for fast retrieval. Use a script or a cron job to repeatedly copy master data to Redis."),(0,o.kt)("li",{parentName:"ol"},"The application requests master data."),(0,o.kt)("li",{parentName:"ol"},"Instead of MongoDB serving the data, the master data will be served from Redis.")),(0,o.kt)("h3",{id:"use-cases"},"Use cases"),(0,o.kt)("p",null,"Consider this pattern when you need to"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Serve master data at speed"),": By definition, nearly every application requires access to master data. Pre-caching master data with Redis delivers it to users at high speed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Support massive master tables"),": Master tables often have millions of records. Searching through them can cause performance bottlenecks. Use Redis to perform real-time search on the master data to increase performance with sub-millisecond response."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Postpone expensive hardware and software investments"),": Defer costly infrastructure enhancements by using Redis. Get the performance and scaling benefits without asking the CFO to write a check.")),(0,o.kt)("h3",{id:"demo"},"Demo"),(0,o.kt)("p",null,"The image below illustrates a standard way to showcase a UI that is suitable for master data lookups. The developer responsible for this application would treat certain fields as master data, including movie language, country, genre, and ratings, because they are required for common application transactions."),(0,o.kt)("p",null,"Consider the pop-up dialog that appears when a user who wants to add a new movie clicks the movie application plus the icon. The pop-up includes drop-down menus for both country and language. In this demonstration, Redis loads the values."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"demo-03",src:a(40266).Z,width:"1304",height:"557"})),(0,o.kt)("h3",{id:"code"},"Code"),(0,o.kt)("p",null,"The two code blocks below display a fetch query of master data from both MongoDB and Redis that loads the country and language drop-down values."),(0,o.kt)("p",null,"Previously, if the application used MongoDB, it searched the static database to retrieve the movie's country and language values. That can be time-consuming if it's read from persistent storage\u2014and is inefficient if the information is static."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'*** BEFORE (MongoDB)***\n*** MongoDB regular search query ***\nfunction getMasterCategories() {\n  ...\n  db.collection("masterCategories").find({\n    statusCode: {\n      $gt: 0,\n    },\n    category: {\n      $in: ["COUNTRY", "LANGUAGE"],\n    },\n  });\n  ...\n}\n')),(0,o.kt)("p",null,"Instead, the \u201cafter\u201d views in the code blocks show that the master data can be accessed with only a few lines of code\u2014and much faster response times."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'*** AFTER (Redis) ***\n*** Redis OM Node query ***\nfunction getMasterCategories() {\n  ...\n  masterCategoriesRepository\n    .search()\n    .where("statusCode")\n    .gt(0)\n    .and("categoryTag")\n    .containOneOf("COUNTRY", "LANGUAGE");\n  ...\n}\n')),(0,o.kt)("h2",{id:"download-the-e-book"},"Download the E-book"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Sensing a pattern here?"),"\nThe master data-lookup pattern is not the only design pattern you can use to improve application performance.")))}m.isMDXComponent=!0},94047:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var n=a(87462),o=(a(67294),a(3905));const r={},s=void 0,i={unversionedId:"howtos/solutions/caching-architecture/common-caching/caching-movie-app",id:"howtos/solutions/caching-architecture/common-caching/caching-movie-app",title:"caching-movie-app",description:"The demo application used in the rest of this tutorial showcases a movie application with basic create, read, update, and delete (CRUD) operations.",source:"@site/docs/howtos/solutions/caching-architecture/common-caching/caching-movie-app.mdx",sourceDirName:"howtos/solutions/caching-architecture/common-caching",slug:"/howtos/solutions/caching-architecture/common-caching/caching-movie-app",permalink:"/howtos/solutions/caching-architecture/common-caching/caching-movie-app",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/caching-architecture/common-caching/caching-movie-app.mdx",tags:[],version:"current",lastUpdatedAt:1681340538,formattedLastUpdatedAt:"Apr 12, 2023",frontMatter:{}},c={},d=[],p={toc:d};function l(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The demo application used in the rest of this tutorial showcases a movie application with basic create, read, update, and delete (CRUD) operations.\n",(0,o.kt)("img",{alt:"demo-01",src:a(82989).Z,width:"2616",height:"1348"})),(0,o.kt)("p",null,"The movie application dashboard contains a search section at the top and a list of movie cards in the middle. The floating plus icon displays a pop-up when the user selects it, permitting the user to enter new movie details. The search section has a text search bar and a toggle link between text search and basic (that is, form-based) search. Each movie card has edit and delete icons, which are displayed when a mouse hovers over the card."))}l.isMDXComponent=!0},87269:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var n=a(87462),o=(a(67294),a(3905));const r={},s=void 0,i={unversionedId:"howtos/solutions/caching-architecture/common-caching/source-code-movie-app",id:"howtos/solutions/caching-architecture/common-caching/source-code-movie-app",title:"source-code-movie-app",description:"Below are the commands to clone the source code (frontend and backend) for the application used in this tutorial",source:"@site/docs/howtos/solutions/caching-architecture/common-caching/source-code-movie-app.mdx",sourceDirName:"howtos/solutions/caching-architecture/common-caching",slug:"/howtos/solutions/caching-architecture/common-caching/source-code-movie-app",permalink:"/howtos/solutions/caching-architecture/common-caching/source-code-movie-app",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/caching-architecture/common-caching/source-code-movie-app.mdx",tags:[],version:"current",lastUpdatedAt:1681340538,formattedLastUpdatedAt:"Apr 12, 2023",frontMatter:{}},c={},d=[],p={toc:d};function l(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"GITHUB CODE",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Below are the commands to clone the source code (frontend and backend) for the application used in this tutorial"),(0,o.kt)("p",{parentName:"admonition"},"git clone ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/redis-developer/ebook-speed-mern-frontend.git"},"https://github.com/redis-developer/ebook-speed-mern-frontend.git")),(0,o.kt)("p",{parentName:"admonition"},"git clone ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/redis-developer/ebook-speed-mern-backend.git"},"https://github.com/redis-developer/ebook-speed-mern-backend.git"))))}l.isMDXComponent=!0},82989:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/demo-01-e8fece1a10d65e2298fa3e312b75ce29.png"},40266:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/demo-03-2e970cc2abb1a94aa61d66131b6a1bf6.png"},56251:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pattern-01-dddf54d02b1c3cf616eaed3bf07ae6f1.jpg"}}]);