"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[8737],{3905:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>m});var a=i(67294);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function n(e,t){if(null==e)return{};var i,a,o=function(e,t){if(null==e)return{};var i,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},u=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var i=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=n(e,["components","mdxType","originalType","parentName"]),c=d(i),m=o,h=c["".concat(l,".").concat(m)]||c[m]||p[m]||r;return i?a.createElement(h,s(s({ref:t},u),{},{components:i})):a.createElement(h,s({ref:t},u))}));function m(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=i.length,s=new Array(r);s[0]=c;var n={};for(var l in t)hasOwnProperty.call(t,l)&&(n[l]=t[l]);n.originalType=e,n.mdxType="string"==typeof e?e:o,s[1]=n;for(var d=2;d<r;d++)s[d]=i[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,i)}c.displayName="MDXCreateElement"},27173:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>d});var a=i(87462),o=(i(67294),i(3905));const r={id:"index-redisbloom",title:"Probabilistic data structures using Redis Stack",sidebar_label:"Probabilistic data structures using Redis Stack",slug:"/howtos/redisbloom",authors:["ajeet"]},s=void 0,n={unversionedId:"howtos/redisbloom/index-redisbloom",id:"howtos/redisbloom/index-redisbloom",title:"Probabilistic data structures using Redis Stack",description:"RedisBloom extends Redis core to support additional probabilistic data structures. It allows for solving computer science problems in a constant memory space with extremely fast processing and a low error rate. It supports scalable Bloom and Cuckoo filters to determine (with a specified degree of certainty) whether an item is present or absent from a collection.",source:"@site/docs/howtos/redisbloom/index-redisbloom.mdx",sourceDirName:"howtos/redisbloom",slug:"/howtos/redisbloom",permalink:"/howtos/redisbloom",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/redisbloom/index-redisbloom.mdx",tags:[],version:"current",lastUpdatedAt:1655485898,formattedLastUpdatedAt:"Jun 17, 2022",frontMatter:{id:"index-redisbloom",title:"Probabilistic data structures using Redis Stack",sidebar_label:"Probabilistic data structures using Redis Stack",slug:"/howtos/redisbloom",authors:["ajeet"]},sidebar:"docs",previous:{title:"Building RedisGraph databases from CSV inputs",permalink:"/howtos/redisgraph/csvtograph"},next:{title:"Using RedisBloom with .NET",permalink:"/howtos/redisbloom/with-dotnet/redisbloom-withdotnet"}},l={},d=[{value:"Step 1. Create a free Cloud account",id:"step-1-create-a-free-cloud-account",level:3},{value:"Step 2. Create Your database",id:"step-2-create-your-database",level:3},{value:"Step 3. Verify the database details",id:"step-3-verify-the-database-details",level:3},{value:"Step 4. Using RedisInsight",id:"step-4-using-redisinsight",level:3},{value:"Step 5. Add Redis database",id:"step-5-add-redis-database",level:3},{value:"Step 6. Enter Redis Enterprise Cloud details",id:"step-6-enter-redis-enterprise-cloud-details",level:3},{value:"Step 7. Verify the database under RedisInsight dashboard",id:"step-7-verify-the-database-under-redisinsight-dashboard",level:3},{value:"Step 8. Getting Started with RedisBloom",id:"step-8-getting-started-with-redisbloom",level:3},{value:"Create a Bloom filter",id:"create-a-bloom-filter",level:4},{value:"Determine whether or not an item exists",id:"determine-whether-or-not-an-item-exists",level:4},{value:"Add one or more items to the Bloom filter",id:"add-one-or-more-items-to-the-bloom-filter",level:4},{value:"Determine whether or not a unique visitor\u2019s IP address exists",id:"determine-whether-or-not-a-unique-visitors-ip-address-exists",level:4},{value:"Next Steps",id:"next-steps",level:3}],u={toc:d};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"RedisBloom extends Redis core to support additional probabilistic data structures. It allows for solving computer science problems in a constant memory space with extremely fast processing and a low error rate. It supports scalable Bloom and Cuckoo filters to determine (with a specified degree of certainty) whether an item is present or absent from a collection."),(0,o.kt)("p",null,"The RedisBloom module provides four data types:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Bloom filter: A probabilistic data structure that can test for presence. A Bloom filter is a data structure designed to tell you, rapidly and memory-efficiently, whether an element is present in a set. Bloom filters typically exhibit better performance and scalability when inserting items (so if you're often adding items to your dataset then Bloom may be ideal)."),(0,o.kt)("li",{parentName:"ul"},"Cuckoo filter: An alternative to Bloom filters, Cuckoo filters comes with additional support for deletion of elements from a set. These filters are quicker on check operations."),(0,o.kt)("li",{parentName:"ul"},"Count-min sketch: A count-min sketch is generally used to determine the frequency of events in a stream. You can query the count-min sketch to get an estimate of the frequency of any given event."),(0,o.kt)("li",{parentName:"ul"},"Top-K: The Top-K probabilistic data structure in RedisBloom is a deterministic algorithm that approximates frequencies for the top k items. With Top-K, you\u2019ll be notified in real time whenever elements enter into or are expelled from your Top-K list. If an element add-command enters the list, the dropped element will be returned.")),(0,o.kt)("p",null,"In this tutorial, you will see how Redis Stack provides Redis with support for low latency and compact probabilistic data structures."),(0,o.kt)("h3",{id:"step-1-create-a-free-cloud-account"},"Step 1. Create a free Cloud account"),(0,o.kt)("p",null,"Create your free ",(0,o.kt)("a",{href:"https://redis.com/try-free/",target:"_blank",rel:"noopener"},"Redis Enterprise Cloud account"),". Once you click on \u201cGet Started\u201d, you will receive an email with a link to activate your account and complete your signup process."),(0,o.kt)("admonition",{title:"TIP",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For a limited time, use ",(0,o.kt)("strong",{parentName:"p"},"TIGER200")," to get ",(0,o.kt)("strong",{parentName:"p"},"$200")," credits on Redis Enterprise Cloud and try all the advanced capabilities!"),(0,o.kt)("p",{parentName:"admonition"},"\ud83c\udf89 ",(0,o.kt)("a",{parentName:"p",href:"https://redis.com/try-free"},"Click here to sign up"))),(0,o.kt)("h3",{id:"step-2-create-your-database"},"Step 2. Create Your database"),(0,o.kt)("p",null,'Choose your preferred cloud vendor. Select the region and then click "Let\'s start free" to create your free database automatically.'),(0,o.kt)("admonition",{title:"TIP",type:"info"},(0,o.kt)("p",{parentName:"admonition"},'If you want to create a custom database with your preferred name and type of redis,\nclick "Create a custom database" option shown in the image.')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"create database ",src:i(44688).Z,width:"1676",height:"1010"})),(0,o.kt)("h3",{id:"step-3-verify-the-database-details"},"Step 3. Verify the database details"),(0,o.kt)("p",null,'You will be provided with Public endpoint URL and "Redis Stack" as the type of database with the list of modules that comes by default.'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"verify database",src:i(36535).Z,width:"1346",height:"881"})),(0,o.kt)("h3",{id:"step-4-using-redisinsight"},"Step 4. Using RedisInsight"),(0,o.kt)("p",null,"RedisInsight is a visual tool that lets you do both GUI- and CLI-based interactions with your Redis database, and so much more when developing your Redis based application. It is a fully-featured pure Desktop GUI client that provides capabilities to design, develop and optimize your Redis application. It works with any cloud provider as long as you run it on a host with network access to your cloud-based Redis server. It makes it easy to discover cloud databases and configure connection details with a single click. It allows you to automatically add Redis Enterprise Software and Redis Enterprise Cloud databases."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/explore/redisinsightv2/getting-started"},"Follow this link"),' to install RedisInsight v2 on your local system.\nAssuming that you already have RedisInsight v2 installed on your MacOS, you can browse through the Applications and click "RedisInsight-v2" to bring up the Redis Desktop GUI tool.'),(0,o.kt)("h3",{id:"step-5-add-redis-database"},"Step 5. Add Redis database"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"access redisinsight",src:i(7361).Z,width:"2078",height:"1496"})),(0,o.kt)("h3",{id:"step-6-enter-redis-enterprise-cloud-details"},"Step 6. Enter Redis Enterprise Cloud details"),(0,o.kt)("p",null,"Add the Redis Enterprise cloud database endpoint, port and password."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"access redisinsight",src:i(24378).Z,width:"2332",height:"1734"})),(0,o.kt)("h3",{id:"step-7-verify-the-database-under-redisinsight-dashboard"},"Step 7. Verify the database under RedisInsight dashboard"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"database details",src:i(92861).Z,width:"2226",height:"844"})),(0,o.kt)("h3",{id:"step-8-getting-started-with-redisbloom"},"Step 8. Getting Started with RedisBloom"),(0,o.kt)("p",null,"In the next steps you will use some basic RedisBloom commands. You can run them from the Redis command-line interface (redis-cli) or use the CLI available in RedisInsight. (See part 2 of this tutorial to learn more about using the RedisInsight CLI) To interact with RedisBloom, you use the ",(0,o.kt)("inlineCode",{parentName:"p"},"BF.ADD")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"BF.EXISTS")," commands."),(0,o.kt)("p",null,"Let\u2019s go ahead and test drive some RedisBloom-specific operations. We will create a basic dataset based on unique visitors\u2019 IP addresses, and you will see how to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create a Bloom filter"),(0,o.kt)("li",{parentName:"ul"},"Determine whether or not an item exists in the Bloom filter"),(0,o.kt)("li",{parentName:"ul"},"Add one or more items to the Bloom filter"),(0,o.kt)("li",{parentName:"ul"},"Determine whether or not a unique visitor\u2019s IP address exists")),(0,o.kt)("p",null,"Let\u2019s walk through the process step-by-step:"),(0,o.kt)("h4",{id:"create-a-bloom-filter"},"Create a Bloom filter"),(0,o.kt)("p",null,"Use the BF.ADD command to add a unique visitor IP address to the Bloom filter as shown here:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},">> BF.ADD unique_visitors 10.94.214.120\n(integer) 1\n(1.75s)\n")),(0,o.kt)("h4",{id:"determine-whether-or-not-an-item-exists"},"Determine whether or not an item exists"),(0,o.kt)("p",null,"Use the BF.EXISTS command to determine whether or not an item may exist in the Bloom filter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},">> BF.EXISTS unique_visitors 10.94.214.120\n(integer) 1\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},">> BF.EXISTS unique_visitors 10.94.214.121\n(integer) 0\n(1.46s)\n")),(0,o.kt)("p",null,'In the above example, the first command shows the result as \u201c1\u201d, indicating that the item may exist, whereas the second command displays "0", indicating that the item certainly may not exist.'),(0,o.kt)("h4",{id:"add-one-or-more-items-to-the-bloom-filter"},"Add one or more items to the Bloom filter"),(0,o.kt)("p",null,"Use the BF.MADD command to add one or more items to the Bloom filter, creating the filter if it does not yet exist. This command operates identically to BF.ADD, except it allows multiple inputs and returns multiple values:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},">> BF.MADD unique_visitors 10.94.214.100 10.94.214.200 10.94.214.210 10.94.214.212\n1) (integer) 1\n2) (integer) 1\n3) (integer) 1\n4) (integer) 1\n")),(0,o.kt)("p",null,"As shown above, the BF.MADD allows you to add one or more visitors\u2019 IP addresses to the Bloom filter."),(0,o.kt)("h4",{id:"determine-whether-or-not-a-unique-visitors-ip-address-exists"},"Determine whether or not a unique visitor\u2019s IP address exists"),(0,o.kt)("p",null,"Use BF.MEXISTS to determine if one or more items may exist in the filter or not:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},">> BF.MEXISTS unique_visitors 10.94.214.200 10.94.214.212\n1) (integer) 1\n2) (integer) 1\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"}," >> BF.MEXISTS unique_visitors 10.94.214.200 10.94.214.213\n1) (integer) 1\n2) (integer) 0\n")),(0,o.kt)("p",null,'In the above example, the first command shows the result as \u201c1\u201d for both the visitors\u2019 IP addresses, indicating that these items do exist. The second command displays "0" for one of the visitor\u2019s IP addresses, indicating that the item certainly does not exist.'),(0,o.kt)("h3",{id:"next-steps"},"Next Steps"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Learn more about RedisBloom in the ",(0,o.kt)("a",{parentName:"li",href:"https://oss.redis.com/redisbloom/Quick_Start/"},"Quick Start")," tutorial."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.redis.com/howtos/frauddetection/"},"How to build a Fraud Detection System using RedisGears and RedisBloom")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://redis.com/blog/use-redis-content-filtering/"},"How to Use Redis for Content Filtering")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://redis.com/modules/redis-bloom/"},"Benefits of RedisBloom"))))}p.isMDXComponent=!0},7361:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/add_database-9830232a6e209dc61f0bfd5a8bf87ea4.png"},24378:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/database_creds-f7ab4af8f0121712ed02fff3901ebfec.png"},92861:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/database_details-d49880aa22636d96917ad114493a4711.png"},36535:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/details_database-471fa25198e8a549638e2fc8710b96c0.png"},44688:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/select_cloud_vendor-1ad229a2effb7aad2f19495d0cea18fb.png"}}]);