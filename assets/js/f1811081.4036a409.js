"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[3789],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return u}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=l(a),u=r,k=c["".concat(s,".").concat(u)]||c[u]||d[u]||i;return a?n.createElement(k,o(o({ref:t},m),{},{components:a})):n.createElement(k,o({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},10163:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return d}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),o=["components"],p={id:"index-analytics",title:"Building an Analytics dashboard app using Redis",sidebar_label:"Building an Analytics dashboard app using Redis",slug:"/howtos/analytics",authors:["ajeet"]},s=void 0,l={unversionedId:"howtos/analytics/index-analytics",id:"howtos/analytics/index-analytics",title:"Building an Analytics dashboard app using Redis",description:"Interactive analytics dashboards serve several purposes. They allow you to share data and provide you with all those vital information to make game-changing decisions at a faster pace. Building a real-time dynamic dashboard using a traditional relational database might require a complex set of queries. By using a NoSQL database like Redis, you can build a powerful interactive and dynamic dashboard with a small number of Redis commands.",source:"@site/docs/howtos/analytics/index-analytics.mdx",sourceDirName:"howtos/analytics",slug:"/howtos/analytics",permalink:"/howtos/analytics",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/analytics/index-analytics.mdx",tags:[],version:"current",lastUpdatedAt:1655485542,formattedLastUpdatedAt:"6/17/2022",frontMatter:{id:"index-analytics",title:"Building an Analytics dashboard app using Redis",sidebar_label:"Building an Analytics dashboard app using Redis",slug:"/howtos/analytics",authors:["ajeet"]},sidebar:"docs",previous:{title:"How to Use SSL/TLS With Redis Enterprise",permalink:"/howtos/security/"},next:{title:"Building a Popup Store application using Redis",permalink:"/howtos/popupstore"}},m={},d=[{value:"Step 1. Prepare the environment",id:"step-1-prepare-the-environment",level:3},{value:"Step 2. Clone the repository",id:"step-2-clone-the-repository",level:3},{value:"Step 3. Setting up backend",id:"step-3-setting-up-backend",level:3},{value:"Step 4. Install dependencies",id:"step-4-install-dependencies",level:3},{value:"Step 5. Run Docker Compose to install Redis",id:"step-5-run-docker-compose-to-install-redis",level:3}],c={toc:d};function u(e){var t=e.components,p=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,p,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Interactive analytics dashboards serve several purposes. They allow you to share data and provide you with all those vital information to make game-changing decisions at a faster pace. Building a real-time dynamic dashboard using a traditional relational database might require a complex set of queries. By using a NoSQL database like Redis, you can build a powerful interactive and dynamic dashboard with a small number of Redis commands."),(0,i.kt)("p",null,"Redis is an open source, in-memory, key-value data store most commonly used as a primary database, cache, message broker, and queue. Redis cache delivers sub-millisecond response times, enabling fast and powerful real-time applications in industries such as gaming, fintech, ad-tech, social media, healthcare, and IoT.\nThis tutorial shows a basic analytics dashboard app writen in NodeJS (JavaScript) that uses the Redis Bitmap data type."),(0,i.kt)("div",{class:"text--center"},(0,i.kt)("iframe",{width:"760",height:"415",src:"https://www.youtube.com/embed/Ugym4yUeIhA",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})),(0,i.kt)("h3",{id:"step-1-prepare-the-environment"},"Step 1. Prepare the environment"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Install Node - v12.19.0"),(0,i.kt)("li",{parentName:"ul"},"Install NPM - v6.14.8"),(0,i.kt)("li",{parentName:"ul"},"Install Docker - v19.03.13 (optional)")),(0,i.kt)("h3",{id:"step-2-clone-the-repository"},"Step 2. Clone the repository"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," git clone https://github.com/redis-developer/basic-analytics-dashboard-redis-bitmaps-nodejs\n")),(0,i.kt)("h3",{id:"step-3-setting-up-backend"},"Step 3. Setting up backend"),(0,i.kt)("p",null,"First we will be setting up some environment variables."),(0,i.kt)("p",null,"Go to /server folder (cd ./server) and then execute the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," cp .env.example .env\n")),(0,i.kt)("h3",{id:"step-4-install-dependencies"},"Step 4. Install dependencies"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," npm install\n")),(0,i.kt)("h3",{id:"step-5-run-docker-compose-to-install-redis"},"Step 5. Run Docker Compose to install Redis"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," docker network create global\n docker-compose up -d --build\n")),(0,i.kt)("p",null,"You may need to preface the docker command with ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo"),". If you don't want to use sudo, create a Unix group called docker and add users to it. When the Docker daemon starts, it creates a Unix socket accessible by members of the docker group.\nOnce the Redis database is up and running, you can connect to it using the ",(0,i.kt)("inlineCode",{parentName:"p"},"redis-cli")," command."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"TIP")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"By default, Redis runs on port 6379 but you can change it by specifying an alternative host port in the docker compose file."),(0,i.kt)("li",{parentName:"ul"},"You can use a Redis configuration file and mount it as volumes in the docker compose YAML file."),(0,i.kt)("li",{parentName:"ul"},"You can connect to the Redis instance by using ",(0,i.kt)("inlineCode",{parentName:"li"},"redis-cli -h hostname -p port")," command."),(0,i.kt)("li",{parentName:"ul"},"You can run the Redis ",(0,i.kt)("inlineCode",{parentName:"li"},"INFO")," command to get statistics, metrics and health information from the Redis instance like cache, memory stats, Redis metrics and modules enabled."),(0,i.kt)("li",{parentName:"ul"},"Use the Redis ",(0,i.kt)("inlineCode",{parentName:"li"},"MONITOR")," command to get a real time view of commands that clients send to Redis.\n:::")),(0,i.kt)("h3",{parentName:"div",id:"step-6-run-the-backend"},"Step 6. Run the backend"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," npm run dev\n")),(0,i.kt)("h3",{parentName:"div",id:"step-7-setting-up-the-frontend"},"Step 7. Setting up the frontend"),(0,i.kt)("p",{parentName:"div"},"Go to /client folder (cd ./client) and then:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," cp .env.example .env\n")),(0,i.kt)("h3",{parentName:"div",id:"step-8-install-dependencies"},"Step 8. Install dependencies"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," npm install\n")),(0,i.kt)("h3",{parentName:"div",id:"step-9-run-the-frontend"},"Step 9. Run the frontend"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," npm run serve\n")),(0,i.kt)("p",{parentName:"div"},(0,i.kt)("img",{alt:"analytics",src:a(56197).Z,width:"2336",height:"864"})),(0,i.kt)("h3",{parentName:"div",id:"how-does-it-work"},"How does it work?"),(0,i.kt)("h4",{parentName:"div",id:"how-the-data-is-stored"},"How the data is stored:"),(0,i.kt)("p",{parentName:"div"},"The event data is stored in various keys and various data types."),(0,i.kt)("p",{parentName:"div"},"For each of time spans:"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"year: like 2021"),(0,i.kt)("li",{parentName:"ul"},"month: like 2021-03 (means March of 2021)"),(0,i.kt)("li",{parentName:"ul"},"day: like 2021-03-03 (means 3rd March of 2021)"),(0,i.kt)("li",{parentName:"ul"},"weekOfMonth: like 2021-03/4 (means 4th week of March 2021)"),(0,i.kt)("li",{parentName:"ul"},"anytime")),(0,i.kt)("p",{parentName:"div"},"and for each of scopes:"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"source"),(0,i.kt)("li",{parentName:"ul"},"action"),(0,i.kt)("li",{parentName:"ul"},"source + action"),(0,i.kt)("li",{parentName:"ul"},"action + page"),(0,i.kt)("li",{parentName:"ul"},"userId + action"),(0,i.kt)("li",{parentName:"ul"},"global")),(0,i.kt)("p",{parentName:"div"},"and for each of data types (types):"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"count (Integer stored as String)"),(0,i.kt)("li",{parentName:"ul"},"bitmap"),(0,i.kt)("li",{parentName:"ul"},"set")),(0,i.kt)("p",{parentName:"div"},"Is generated key like:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," rab:{type}[:custom:{customName}][:user:{userId}][:source:{source}][:action:{action}][:page:{page}]:timeSpan:{timeSpan}\n")),(0,i.kt)("p",{parentName:"div"},"where values in [] are optional."),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For each generated key like rab:count:","*",", data is stored like: INCR {key}\nExample:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," INCR rab:count:action:addToCart:timeSpan:2015-12/3\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For each generated key like: rab:set:","*",", data is stored like: SADD {key} {userId}\nExample:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," SADD rab:set:action:addToCart:timeSpan:2015-12/3 8\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For each generated key like rab:bitmap:","*",", data is stored like: SETBIT {key} {userId} 1.\nExample:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," SETBIT rab:bitmap:action:addToCart:timeSpan:2015-12/3 8 1\n")))),(0,i.kt)("h3",{parentName:"div",id:"cohort-data"},"Cohort data"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We store users who register and then bought some products (action order matters).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For each buy action in December we check if user performed register action before (register counter must be greater than zero).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If so, we set user bit to 1 like: SETBIT rab:bitmap:custom:cohort-buy:timeSpan:{timeSpan} {userId} 1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"E.g User Id 2 bought 2 products on 2015-12-17. It won't be stored.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"E.g User Id 10 bought 1 product on 2015-12-17 and registered on 2015-12-16.\nIt will be stored like: SETBIT rab:bitmap:custom:cohort-buy:timeSpan:2015-12 10 1.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We assume that user cannot buy without register."))),(0,i.kt)("h4",{parentName:"div",id:"retention-data"},"Retention data"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Retention means users who bought on two different dates"),(0,i.kt)("li",{parentName:"ul"},"For each buy action we check if user bought more products anytime than bought on particular day (current purchase not included)."),(0,i.kt)("li",{parentName:"ul"},"If so, we add user id to set like: SADD rab:set:custom:retention-buy:timeSpan:{timeSpan} {userId}"),(0,i.kt)("li",{parentName:"ul"},"E.g User Id 5 bought 3 products on 2015-12-15. His retention won't be stored (products bought on particular day: 2, products bought anytime: 0)."),(0,i.kt)("li",{parentName:"ul"},"E.g User Id 3 bought 1 product on 2015-12-15 and before - 1 product on 2015-12-13. His retention will be stored (products bought on particular day: 0, products bought anytime: 1) like: SADD rab:set:custom:retention-buy:timeSpan:2015-12 3.")),(0,i.kt)("h4",{parentName:"div",id:"how-the-data-is-accessed"},"How the data is accessed:"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Total Traffic:")),(0,i.kt)("p",{parentName:"div"},"December: ",(0,i.kt)("inlineCode",{parentName:"p"},"BITCOUNT rab:bitmap:custom:global:timeSpan:2015-12"),"\nX week of December: ",(0,i.kt)("inlineCode",{parentName:"p"},"BITCOUNT rab:bitmap:custom:global:timeSpan:2015-12/{X}"),"\nExample:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," BITCOUNT rab:bitmap:custom:global:timeSpan:2015-12/3\n")),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Traffic per Page ({page} is one of: homepage, product1, product2, product3):")),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"December: BITCOUNT rab:bitmap:action:visit:page:{page}:timeSpan:2015-12\n")),(0,i.kt)("p",{parentName:"div"},"Example:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," BITCOUNT rab:bitmap:action:visit:page:homepage:timeSpan:2015-12\n")),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"X week of December:")),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"BITCOUNT rab:bitmap:action:visit:page:{page}:timeSpan:2015-12/{X}\n")),(0,i.kt)("p",{parentName:"div"},"Example:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," BITCOUNT rab:bitmap:action:visit:page:product1:timeSpan:2015-12/2\n")),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Traffic per Source ({source} is one of: google, Facebook, email, direct, referral, none):")),(0,i.kt)("p",{parentName:"div"},"December:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"BITCOUNT rab:bitmap:source:{source}:timeSpan:2015-12\n")),(0,i.kt)("p",{parentName:"div"},"Example:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," BITCOUNT rab:bitmap:source:referral:timeSpan:2015-12\n")),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"X week of December: ",(0,i.kt)("inlineCode",{parentName:"li"},"BITCOUNT rab:bitmap:source:{source}:timeSpan:2015-12/{X}"))),(0,i.kt)("p",{parentName:"div"},"Example:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," BITCOUNT rab:bitmap:source:google:timeSpan:2015-12/1\n")),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Trend traffic ({page} is one of: homepage, product1, product2, product3):")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"December: from ",(0,i.kt)("inlineCode",{parentName:"p"},"BITCOUNT rab:bitmap:action:visit:{page}:timeSpan:2015-12-01")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"BITCOUNT rab:bitmap:action:visit:{page}:timeSpan:2015-12-31"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"1 Week of December: Similar as above, but from 2015-12-01 to 2015-12-07")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2 Week of December: Similar as above, but from 2015-12-08 to 2015-12-14")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"3 Week of December: Similar as above, but from 2015-12-15 to 2015-12-21")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"4 Week of December: Similar as above, but from 2015-12-22 to 2015-12-28")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"5 Week of December: Similar as above, but from 2015-12-29 to 2015-12-31")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Example:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," BITCOUNT rab:bitmap:action:visit:homepage:timeSpan:2015-12-29 => BITCOUNT rab:bitmap:action:visit:homepage:timeSpan:2015-12-30 => BITCOUNT rab:bitmap:action:visit:homepage:timeSpan:2015-12-31\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Total products bought:")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"December: ",(0,i.kt)("inlineCode",{parentName:"p"},"GET rab:count:action:buy:timeSpan:2015-12"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"X week of December: ",(0,i.kt)("inlineCode",{parentName:"p"},"GET rab:count:action:buy:timeSpan:2015-12/{X}"),"\nExample:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," GET rab:count:action:buy:timeSpan:2015-12/1\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Total products added to cart:"))),(0,i.kt)("p",{parentName:"div"},"December: ",(0,i.kt)("inlineCode",{parentName:"p"},"GET rab:count:action:addToCart:timeSpan:2015-12"),"\nX week of December: ",(0,i.kt)("inlineCode",{parentName:"p"},"GET rab:count:action:addToCart:timeSpan:2015-12/{X}"),"\nExample:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," GET rab:count:action:addToCart:timeSpan:2015-12/1\n")),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Shares of products bought ({productPage} is on of product1, product2, product3):")),(0,i.kt)("p",{parentName:"div"},"December: ",(0,i.kt)("inlineCode",{parentName:"p"},"GET rab:count:action:buy:page:{productPage}:timeSpan:2015-12"),"\nExample:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," GET rab:count:action:buy:page:product3:timeSpan:2015-12\n")),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"X week of December: ",(0,i.kt)("inlineCode",{parentName:"p"},"GET rab:count:action:buy:page:{productPage}:timeSpan:2015-12/{X}"),"\nExample:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," GET rab:count:action:buy:page:product1:timeSpan:2015-12/2\n")))),(0,i.kt)("h4",{parentName:"div",id:"customer-and-cohort-analysis"},"Customer and Cohort Analysis"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"People who registered: BITCOUNT rab:bitmap:action:register:timeSpan:2015-12"),(0,i.kt)("li",{parentName:"ul"},"People who register then bought (order matters): BITCOUNT rab:bitmap:custom:cohort-buy:timeSpan:2015-12"),(0,i.kt)("li",{parentName:"ul"},"Dropoff: (People who register then bought / People who register) ","*"," 100 ","[%]"),(0,i.kt)("li",{parentName:"ul"},"Customers who bought only specified product ({productPage} is one of: product1, product2, product3):")),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"SMEMBERS rab:set:action:buy:page:{productPage}:timeSpan:2015-12\n")),(0,i.kt)("p",{parentName:"div"},"Example:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," SMEMBERS rab:set:action:buy:page:product2:timeSpan:2015-12\n")),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Customers who bought Product1 and Product2:")),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre"},"SINTER rab:set:action:buy:page:product1:timeSpan:anytime rab:set:action:buy:page:product2:timeSpan:anytime\n")),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Customer Retention (customers who bought on the different dates): SMEMBERS rab:set:custom:retention-buy:timeSpan:anytime")),(0,i.kt)("h3",{parentName:"div",id:"references"},"References"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/redis-developer/basic-analytics-dashboard-redis-bitmaps-nodejs"},"Complete Source Code")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://redis.io/topics/data-types-intro"},"Use cases of Bitmaps"))))))}u.isMDXComponent=!0},56197:function(e,t,a){t.Z=a.p+"assets/images/analytics_traffic-bd7f720aed16bcacb4d712ce0f2e4a87.png"}}]);