"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[6365],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return n?i.createElement(h,l(l({ref:t},d),{},{components:n})):i.createElement(h,l({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},50358:(e,t,n)=>{n.d(t,{Z:()=>s});var i=n(67294),a=n(52263);const r="authorByline_VoxI",l="authorLabel_a70t",o="authorProfileImage_URwT";const s=function(e){let{frontMatter:t}=e;const{siteConfig:n}=(0,a.Z)(),s=n.customFields.authors;return i.createElement(i.Fragment,null,t.authors&&i.createElement("div",{className:"docAuthors"},i.createElement("hr",null),t.authors.map((e=>i.createElement("div",{key:e,className:r},i.createElement("img",{className:o,src:`/img/${s[e].image?s[e].image:"default_author_profile_pic.png"}`,alt:`Profile picture for ${s[e].name}`}),i.createElement("div",null,i.createElement("div",{className:l},"Author:"),i.createElement("div",null,i.createElement("a",{href:s[e].link,target:"_blank"},s[e].name),", ",s[e].title))))),i.createElement("hr",null)))}},16014:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var i=n(87462),a=(n(67294),n(3905)),r=n(50358);const l={id:"index-spring-fixed-window-reactive-lua",title:"Atomicity with Lua",sidebar_label:"Atomicity with Lua",slug:"/develop/java/spring/rate-limiting/fixed-window/reactive-lua",authors:["bsb"]},o=void 0,s={unversionedId:"develop/java/spring/rate-limiting/fixed-window/index-spring-fixed-window-reactive-lua",id:"develop/java/spring/rate-limiting/fixed-window/index-spring-fixed-window-reactive-lua",title:"Atomicity with Lua",description:"Improving atomicity and performance with Lua",source:"@site/docs/develop/java/spring/rate-limiting/fixed-window/index-fixed-window-reactive-lua.mdx",sourceDirName:"develop/java/spring/rate-limiting/fixed-window",slug:"/develop/java/spring/rate-limiting/fixed-window/reactive-lua",permalink:"/develop/java/spring/rate-limiting/fixed-window/reactive-lua",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/java/spring/rate-limiting/fixed-window/index-fixed-window-reactive-lua.mdx",tags:[],version:"current",lastUpdatedAt:1667495358,formattedLastUpdatedAt:"Nov 3, 2022",frontMatter:{id:"index-spring-fixed-window-reactive-lua",title:"Atomicity with Lua",sidebar_label:"Atomicity with Lua",slug:"/develop/java/spring/rate-limiting/fixed-window/reactive-lua",authors:["bsb"]},sidebar:"docs",previous:{title:"Reactive Implementation",permalink:"/develop/java/spring/rate-limiting/fixed-window/reactive"},next:{title:"Atomicity with Gears",permalink:"/develop/java/spring/rate-limiting/fixed-window/reactive-gears"}},p={},d=[{value:"Improving atomicity and performance with Lua",id:"improving-atomicity-and-performance-with-lua",level:2},{value:"Rate Limiting Lua Script",id:"rate-limiting-lua-script",level:2},{value:"Redis Lua Scripts in Spring Data Redis",id:"redis-lua-scripts-in-spring-data-redis",level:2},{value:"Modifying the Filter to use Lua",id:"modifying-the-filter-to-use-lua",level:2},{value:"Applying the filter",id:"applying-the-filter",level:2},{value:"Testing with curl",id:"testing-with-curl",level:2}],u={toc:d};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(r.Z,{frontMatter:l,mdxType:"Authors"}),(0,a.kt)("h2",{id:"improving-atomicity-and-performance-with-lua"},"Improving atomicity and performance with Lua"),(0,a.kt)("p",null,"One way to improve our implementation is by moving the responsibility of\nperforming the ",(0,a.kt)("inlineCode",{parentName:"p"},"INCR")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"EXPIRE")," operations from the ",(0,a.kt)("inlineCode",{parentName:"p"},"incrAndExpireKey"),"\nmethod, to a Lua script."),(0,a.kt)("h2",{id:"rate-limiting-lua-script"},"Rate Limiting Lua Script"),(0,a.kt)("p",null,"Redis has the ability to execute Lua scripts on the server side. Lua scripts\nare executed atomically, that is, no other script or command will run\nwhile a script is running, which gives us the same transactional semantics as ",(0,a.kt)("inlineCode",{parentName:"p"},"MULTI")," / ",(0,a.kt)("inlineCode",{parentName:"p"},"EXEC"),"."),(0,a.kt)("p",null,"Below is a simple Lua script to encapsulate the rate limiting logic. The script returns ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"\nif the request is to be rejected or ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," otherwise:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"-- rateLimiter.lua\nlocal key = KEYS[1]\nlocal requests = tonumber(redis.call('GET', key) or '-1')\nlocal max_requests = tonumber(ARGV[1])\nlocal expiry = tonumber(ARGV[2])\n\nif (requests == -1) or (requests < max_requests) then\n  redis.call('INCR', key)\n  redis.call('EXPIRE', key, expiry)\n  return false\nelse\n  return true\nend\n")),(0,a.kt)("p",null,"Place the script under ",(0,a.kt)("inlineCode",{parentName:"p"},"src/main/resources/scripts"),". Now, Let's break it down:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Lua scripts in Redis work with keys (",(0,a.kt)("inlineCode",{parentName:"li"},"KEYS[]"),") and arguments (",(0,a.kt)("inlineCode",{parentName:"li"},"ARGV[]"),") in our case\nwe are expecting one ",(0,a.kt)("inlineCode",{parentName:"li"},"key")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"KEYS[1]")," (Lua arrays are 1-based)"),(0,a.kt)("li",{parentName:"ol"},"We retrieve the quota for the key in ",(0,a.kt)("inlineCode",{parentName:"li"},"requests")," by making a ",(0,a.kt)("inlineCode",{parentName:"li"},"call")," to the ",(0,a.kt)("inlineCode",{parentName:"li"},"GET")," command,\nreturning ",(0,a.kt)("inlineCode",{parentName:"li"},"-1")," if the key does not exist, and converting the value to a number."),(0,a.kt)("li",{parentName:"ol"},"The quota is passed as the first argument (",(0,a.kt)("inlineCode",{parentName:"li"},"ARGV[1]"),") and stored in ",(0,a.kt)("inlineCode",{parentName:"li"},"max_requests"),", the\nexpiry in seconds is the second argument and stored in ",(0,a.kt)("inlineCode",{parentName:"li"},"expiry")),(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"if")," statement checks whether the request is the first request in the time window or\nif the number of requests have not exceeded the quota, in which case we run the ",(0,a.kt)("inlineCode",{parentName:"li"},"INCR"),"-",(0,a.kt)("inlineCode",{parentName:"li"},"EXPIRE"),"\ncommands and retunr ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," (meaning we are not rate limiting and allowing the request through)."),(0,a.kt)("li",{parentName:"ol"},"If they've exceeded the quote, then we rate limit by returning ",(0,a.kt)("inlineCode",{parentName:"li"},"true"))),(0,a.kt)("p",null,"If you want to learn more about Lua, see ",(0,a.kt)("a",{parentName:"p",href:"https://www.lua.org/pil/contents.html"},"Programming in Lua"),"."),(0,a.kt)("h2",{id:"redis-lua-scripts-in-spring-data-redis"},"Redis Lua Scripts in Spring Data Redis"),(0,a.kt)("p",null,"Spring Data Redis supports Lua scripting via the class ",(0,a.kt)("inlineCode",{parentName:"p"},"RedisScript"),". It handles serialization and intelligently\nuses the Redis script cache. The cache is populated using the ",(0,a.kt)("inlineCode",{parentName:"p"},"SCRIPT LOAD")," command. The default ",(0,a.kt)("inlineCode",{parentName:"p"},"ScriptExecutor"),"\nuses ",(0,a.kt)("a",{parentName:"p",href:"https://redis.io/commands/evalsha"},(0,a.kt)("inlineCode",{parentName:"a"},"EVALSHA"))," using the SHA1 of the script and falling back to\n",(0,a.kt)("a",{parentName:"p",href:"https://redis.io/commands/eval"},(0,a.kt)("inlineCode",{parentName:"a"},"EVAL"))," if the script has not yet been loaded into the cache."),(0,a.kt)("p",null,"Let's add the bean annotated method ",(0,a.kt)("inlineCode",{parentName:"p"},"script()")," to load our script from the classpath:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Bean\npublic RedisScript<Boolean> script() {\n  return RedisScript.of(new ClassPathResource("scripts/rateLimiter.lua"), Boolean.class);\n}\n')),(0,a.kt)("h2",{id:"modifying-the-filter-to-use-lua"},"Modifying the Filter to use Lua"),(0,a.kt)("p",null,"Next, we'll modify the filter to include the script as well as the quota; the value that we need to pass to the script:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"class RateLimiterHandlerFilterFunction implements HandlerFilterFunction<ServerResponse, ServerResponse> {\n\n  private ReactiveRedisTemplate<String, Long> redisTemplate;\n  private RedisScript<Boolean> script;\n  private Long maxRequestPerMinute;\n\n  public RateLimiterHandlerFilterFunction(ReactiveRedisTemplate<String, Long> redisTemplate,\n      RedisScript<Boolean> script, Long maxRequestPerMinute) {\n    this.redisTemplate = redisTemplate;\n    this.script = script;\n    this.maxRequestPerMinute = maxRequestPerMinute;\n  }\n")),(0,a.kt)("p",null,"Now we can modify the ",(0,a.kt)("inlineCode",{parentName:"p"},"filter")," method to use the script. Scripts are run using the execute methods of\n",(0,a.kt)("inlineCode",{parentName:"p"},"RedisTemplate")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"ReactiveRedisTemplate"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"execute")," methods use a configurable ",(0,a.kt)("inlineCode",{parentName:"p"},"ScriptExecutor"),"/",(0,a.kt)("inlineCode",{parentName:"p"},"ReactiveScriptExecutor"),"\nthat inherits the key and value serialization setting of the template to run the scripts:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Override\npublic Mono<ServerResponse> filter(ServerRequest request, HandlerFunction<ServerResponse> next) {\n  int currentMinute = LocalTime.now().getMinute();\n  String key = String.format("rl_%s:%s", requestAddress(request.remoteAddress()), currentMinute);\n\n  return redisTemplate //\n      .execute(script, List.of(key), List.of(maxRequestPerMinute, 59)) //\n      .single(false) //\n      .flatMap(value -> value ? //\n          ServerResponse.status(TOO_MANY_REQUESTS).build() : //\n          next.handle(request));\n}\n')),(0,a.kt)("p",null,"Let's break down the method additions:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"filter")," method uses the template ",(0,a.kt)("inlineCode",{parentName:"li"},"execute")," method passing the script, keys and arguments."),(0,a.kt)("li",{parentName:"ol"},"We expect a ",(0,a.kt)("inlineCode",{parentName:"li"},"single")," result (",(0,a.kt)("inlineCode",{parentName:"li"},"true")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"). The ",(0,a.kt)("inlineCode",{parentName:"li"},"single")," method takes a default value to\nbe returned in case we get an empty result."),(0,a.kt)("li",{parentName:"ol"},"Finally, we use the ",(0,a.kt)("inlineCode",{parentName:"li"},"flatMap")," method to grab the value:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If it is ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," we reject the request with an HTTP 429."),(0,a.kt)("li",{parentName:"ul"},"If it is ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," we handle the request")))),(0,a.kt)("h2",{id:"applying-the-filter"},"Applying the filter"),(0,a.kt)("p",null,"Let's add a configurable ",(0,a.kt)("inlineCode",{parentName:"p"},"@Value")," annotated ",(0,a.kt)("inlineCode",{parentName:"p"},"Long")," value to the ",(0,a.kt)("inlineCode",{parentName:"p"},"FixedWindowRateLimiterApplication")," to\nhold the request quota."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Value("${MAX_REQUESTS_PER_MINUTE}")\nLong maxRequestPerMinute;\n')),(0,a.kt)("p",null,"In our ",(0,a.kt)("inlineCode",{parentName:"p"},"application.properties")," we'll set it to a max of 20 request per minute:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"MAX_REQUESTS_PER_MINUTE=20\n")),(0,a.kt)("p",null,"To invoke the filter we use the newly modified constructor, passing the template, the script, and the\n",(0,a.kt)("inlineCode",{parentName:"p"},"maxRequestPerMinute")," value:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Bean\nRouterFunction<ServerResponse> routes() {\n  return route() //\n      .GET("/api/ping", r -> ok() //\n          .contentType(TEXT_PLAIN) //\n          .body(BodyInserters.fromValue("PONG")) //\n      ).filter(new RateLimiterHandlerFilterFunction(redisTemplate, script(), maxRequestPerMinute)).build();\n}\n')),(0,a.kt)("h2",{id:"testing-with-curl"},"Testing with curl"),(0,a.kt)("p",null,"Using our trusty curl loop:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'for n in {1..22}; do echo $(curl -s -w " :: HTTP %{http_code}, %{size_download} bytes, %{time_total} s" -X GET http://localhost:8080/api/ping); sleep 0.5; done\n')),(0,a.kt)("p",null,"You should see the 21st request being rejected:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'\u279c for n in {1..22}; do echo $(curl -s -w " :: HTTP %{http_code}, %{size_download} bytes, %{time_total} s" -X GET http://localhost:8080/api/ping); sleep 0.5; done\nPONG :: HTTP 200, 4 bytes, 0.173759 s\nPONG :: HTTP 200, 4 bytes, 0.008903 s\nPONG :: HTTP 200, 4 bytes, 0.008796 s\nPONG :: HTTP 200, 4 bytes, 0.009625 s\nPONG :: HTTP 200, 4 bytes, 0.007604 s\nPONG :: HTTP 200, 4 bytes, 0.008052 s\nPONG :: HTTP 200, 4 bytes, 0.011364 s\nPONG :: HTTP 200, 4 bytes, 0.012158 s\nPONG :: HTTP 200, 4 bytes, 0.010415 s\nPONG :: HTTP 200, 4 bytes, 0.010373 s\nPONG :: HTTP 200, 4 bytes, 0.010009 s\nPONG :: HTTP 200, 4 bytes, 0.006587 s\nPONG :: HTTP 200, 4 bytes, 0.006807 s\nPONG :: HTTP 200, 4 bytes, 0.006970 s\nPONG :: HTTP 200, 4 bytes, 0.007948 s\nPONG :: HTTP 200, 4 bytes, 0.007949 s\nPONG :: HTTP 200, 4 bytes, 0.006606 s\nPONG :: HTTP 200, 4 bytes, 0.006336 s\nPONG :: HTTP 200, 4 bytes, 0.007855 s\nPONG :: HTTP 200, 4 bytes, 0.006515 s\n:: HTTP 429, 0 bytes, 0.006633 s\n:: HTTP 429, 0 bytes, 0.008264 s\n')),(0,a.kt)("p",null,"If we run Redis in monitor mode, we should see the Lua calls to ",(0,a.kt)("inlineCode",{parentName:"p"},"EVALSHA"),", followed by the call to ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," for a rejected\nrequest, and the same plus calls to ",(0,a.kt)("inlineCode",{parentName:"p"},"INCR")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"EXPIRE")," for an allowed request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'1630342834.878972 [0 172.17.0.1:65008] "EVALSHA" "16832548450a4b1c5e23ffab55bddefe972fecd2" "1" "rl_localhost:0" "20" "59"\n1630342834.879044 [0 lua] "GET" "rl_localhost:0"\n1630342834.879091 [0 lua] "INCR" "rl_localhost:0"\n1630342834.879141 [0 lua] "EXPIRE" "rl_localhost:0" "59"\n1630342835.401937 [0 172.17.0.1:65008] "EVALSHA" "16832548450a4b1c5e23ffab55bddefe972fecd2" "1" "rl_localhost:0" "20" "59"\n1630342835.402009 [0 lua] "GET" "rl_localhost:0"\n')),(0,a.kt)("p",null,"The complete code for this implementation is under the branch ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/redis-developer/fixed-window-rate-limiter/tree/with_lua"},(0,a.kt)("inlineCode",{parentName:"a"},"with_lua")),"."))}c.isMDXComponent=!0}}]);