"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[5426],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var l=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=l.createContext({}),i=function(e){var t=l.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=i(e.components);return l.createElement(u.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=i(n),d=a,m=c["".concat(u,".").concat(d)]||c[d]||h[d]||r;return n?l.createElement(m,o(o({ref:t},p),{},{components:n})):l.createElement(m,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=c;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var i=2;i<r;i++)o[i]=n[i];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var l=n(67294),a=n(86010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return l.createElement("div",{role:"tabpanel",className:(0,a.Z)(r,o),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>d});var l=n(87462),a=n(67294),r=n(86010),o=n(72389),s=n(67392),u=n(7094),i=n(12466);const p="tabList__CuJ",h="tabItem_LNqP";function c(e){var t;const{lazy:n,block:o,defaultValue:c,values:d,groupId:m,className:k}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=d??v.map((e=>{let{props:{value:t,label:n,attributes:l}}=e;return{value:t,label:n,attributes:l}})),f=(0,s.l)(y,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===c?c:c??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==N&&!y.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:O,setTabGroupChoices:b}=(0,u.U)(),[w,g]=(0,a.useState)(N),S=[],{blockElementScrollPositionUntilNextRender:E}=(0,i.o5)();if(null!=m){const e=O[m];null!=e&&e!==w&&y.some((t=>t.value===e))&&g(e)}const R=e=>{const t=e.currentTarget,n=S.indexOf(t),l=y[n].value;l!==w&&(E(t),g(l),null!=m&&b(m,String(l)))},J=e=>{var t;let n=null;switch(e.key){case"Enter":R(e);break;case"ArrowRight":{const t=S.indexOf(e.currentTarget)+1;n=S[t]??S[0];break}case"ArrowLeft":{const t=S.indexOf(e.currentTarget)-1;n=S[t]??S[S.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,r.Z)("tabs-container",p)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":o},k)},y.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,l.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>S.push(e),onKeyDown:J,onClick:R},o,{className:(0,r.Z)("tabs__item",h,null==o?void 0:o.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,a.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,o.Z)();return a.createElement(c,(0,l.Z)({key:String(t)},e))}},86299:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>h});var l=n(87462),a=(n(67294),n(3905)),r=n(65488),o=n(85162);const s={},u=void 0,i={unversionedId:"howtos/quick-start/cheat-sheets/json",id:"howtos/quick-start/cheat-sheets/json",title:"json",description:"<Tabs",source:"@site/docs/howtos/quick-start/cheat-sheets/json.mdx",sourceDirName:"howtos/quick-start/cheat-sheets",slug:"/howtos/quick-start/cheat-sheets/json",permalink:"/howtos/quick-start/cheat-sheets/json",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/quick-start/cheat-sheets/json.mdx",tags:[],version:"current",lastUpdatedAt:1695062274,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{}},p={},h=[],c={toc:h};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(r.Z,{defaultValue:"CLI",groupId:"REDIS_CHEAT_SHEET",values:[{label:"CLI",value:"CLI"},{label:"NodeRedis",value:"NODE_JS"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"CLI",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("strong",null,"Command")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Syntax")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Example")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Output"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"JSON.SET"),(0,a.kt)("td",null,"JSON.SET key path value"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,'\nJSON.SET employee_profile:1 . \'{"name":"Alice"}\'\n'))),(0,a.kt)("td",null,"OK")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Sets JSON value at path in key.",(0,a.kt)("em",null,"Time Complexity:")," O(M+N) where M is the original size and N is the new size")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"JSON.GET"),(0,a.kt)("td",null,"JSON.GET key [path [path ...]]"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nJSON.GET employee_profile:1\n"))),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\n        { \"name\": 'Alice' }\n")))),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Returns the JSON value at path in key.",(0,a.kt)("em",null,"Time Complexity:")," O(N) when path is evaluated to a single value where N is the size of the value, O(N) when path is evaluated to multiple values, where N is the size of the key")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"JSON.NUMINCRBY"),(0,a.kt)("td",null,"JSON.NUMINCRBY key path number"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nJSON.SET employee_profile:1 .age 30\nJSON.NUMINCRBY employee_profile:1 .age 5\n"))),(0,a.kt)("td",null,"35")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Increments a number inside a JSON document.",(0,a.kt)("em",null,"Time Complexity:")," O(1) when path is evaluated to a single value, O(N) when path is evaluated to multiple values, where N is the size of the key")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"JSON.OBJKEYS"),(0,a.kt)("td",null,"JSON.OBJKEYS key [path]"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nJSON.OBJKEYS employee_profile:1\n"))),(0,a.kt)("td",null,'1) "name" 2) "age"')),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Return the keys in the object that's referenced by path. ",(0,a.kt)("em",null,"Time Complexity:")," O(N) when path is evaluated to a single value, where N is the number of keys in the object, O(N) when path is evaluated to multiple values, where N is the size of the key")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"JSON.OBJLEN"),(0,a.kt)("td",null,"JSON.OBJLEN key [path]"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nJSON.OBJLEN employee_profile:1\n"))),(0,a.kt)("td",null,"(integer) 2")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Report the number of keys in the JSON object at path in key. ",(0,a.kt)("em",null,"Time Complexity:")," O(1) when path is evaluated to a single value, O(N) when path is evaluated to multiple values, where N is the size of the key")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"JSON.ARRAPPEND"),(0,a.kt)("td",null,"JSON.ARRAPPEND key [path] value [value ...]"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,'\nJSON.SET employee_profile:1 .colors \'["red", "green", "blue"]\'  \nJSON.ARRAPPEND employee_profile:1 .colors \'"yellow"\'\n'))),(0,a.kt)("td",null,"(integer) 4")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Append the json values into the array at path after the last element in it. ",(0,a.kt)("em",null,"Time Complexity:")," O(1) for each value added, O(N) for multiple values added where N is the size of the key")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"JSON.ARRINSERT"),(0,a.kt)("td",null,"JSON.ARRINSERT key path index value [value ...]"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nJSON.ARRINSERT employee_profile:1 .colors 2 '\"purple\"'\n"))),(0,a.kt)("td",null,"(integer) 5")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Insert the json values into the array at path before the index (shifts to the right). ",(0,a.kt)("em",null,"Time Complexity:")," O(N) when path is evaluated to a single value where N is the size of the array, O(N) when path is evaluated to multiple values, where N is the size of the key")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"JSON.ARRINDEX"),(0,a.kt)("td",null,"JSON.ARRINDEX key path value [start [stop]]"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nJSON.ARRINDEX employee_profile:1 .colors '\"purple\"'\n"))),(0,a.kt)("td",null,"(integer) 2")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Searches for the first occurrence of a JSON value in an array. ",(0,a.kt)("em",null,"Time Complexity:")," O(N) when path is evaluated to a single value where N is the size of the array, O(N) when path is evaluated to multiple values, where N is the size of the key"))))),(0,a.kt)(o.Z,{value:"NODE_JS",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/*\n      JSON.SET key path value\n      Sets JSON value at path in key.\n      O(M+N) where M is the original size and N is the new size\n    */\nconst setResult = await client.json.set('employee_profile:1', '.', {\n  name: 'Alice',\n});\nconsole.log(setResult); // OK\n\n/*\n       JSON.GET key [path [path ...]]\n       Returns the JSON value at path in key.\n       O(N) when path is evaluated to a single value where N is the size of the value, O(N) when path is evaluated to multiple values, where N is the size of the key\n    */\nconst getResult = await client.json.get('employee_profile:1');\nconsole.log(getResult); // { name: 'Alice' }\n\n/*\n      JSON.NUMINCRBY key path number\n      Increments a number inside a JSON document.\n      O(1) when path is evaluated to a single value, O(N) when path is evaluated to multiple values, where N is the size of the key\n    */\nawait client.json.set('employee_profile:1', '.age', 30);\nconst incrementResult = await client.json.numIncrBy(\n  'employee_profile:1',\n  '.age',\n  5,\n);\nconsole.log(incrementResult); // 35\n\n/*\n      JSON.OBJKEYS key [path]\n      Return the keys in the object that's referenced by path\n      O(N) when path is evaluated to a single value, where N is the number of keys in the object, O(N) when path is evaluated to multiple values, where N is the size of the key\n    */\nconst objKeysResult = await client.json.objKeys('employee_profile:1');\nconsole.log(objKeysResult); // [ 'name', 'age' ]\n\n/*\n      JSON.OBJLEN key [path]\n      Report the number of keys in the JSON object at path in key\n      O(1) when path is evaluated to a single value, O(N) when path is evaluated to multiple values, where N is the size of the key\n    */\nconst objLenResult = await client.json.objLen('employee_profile:1');\nconsole.log(objLenResult); // 2\n\n/*\n      JSON.ARRAPPEND key [path] value [value ...]\n      Append the json values into the array at path after the last element in it\n      O(1) for each value added, O(N) for multiple values added where N is the size of the key\n    */\nawait client.json.set('employee_profile:1', '.colors', [\n  'red',\n  'green',\n  'blue',\n]);\nconst arrAppendResult = await client.json.arrAppend(\n  'employee_profile:1',\n  '.colors',\n  'yellow',\n);\nconsole.log(arrAppendResult); // 4\n\n/*\n      JSON.ARRINSERT key path index value [value ...]\n      Insert the json values into the array at path before the index (shifts to the right)\n      O(N) when path is evaluated to a single value where N is the size of the array, O(N) when path is evaluated to multiple values, where N is the size of the key\n    */\nconst arrInsertResult = await client.json.arrInsert(\n  'employee_profile:1',\n  '.colors',\n  2,\n  'purple',\n);\nconsole.log(arrInsertResult); // 5\n\n/*\n      JSON.ARRINDEX key path json [start [stop]]\n      Searches for the first occurrence of a JSON value in an array.\n      O(N) when path is evaluated to a single value where N is the size of the array, O(N) when path is evaluated to multiple values, where N is the size of the key\n    */\nconst arrIndexResult = await client.json.arrIndex(\n  'employee_profile:1',\n  '.colors',\n  'purple',\n);\nconsole.log(arrIndexResult); // 2\n")))))}d.isMDXComponent=!0}}]);