"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[5998],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,y=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return r?n.createElement(y,i(i({ref:t},u),{},{components:r})):n.createElement(y,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},87315:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku",id:"howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku",title:"retrieve-sku",description:"The code that follows shows an example API request and response for retrieveSKU activity.",source:"@site/docs/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku.mdx",sourceDirName:"howtos/solutions/real-time-inventory/available-to-promise/api",slug:"/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku",permalink:"/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/available-to-promise/api/retrieve-sku.mdx",tags:[],version:"current",lastUpdatedAt:1684462271,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{}},l={},p=[],u={toc:p};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The code that follows shows an example API request and response for retrieveSKU activity."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"retrieveSKU API Request")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"GET http://localhost:3000/api/retrieveSKU?sku=1019688\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"retrieveSKU API Response")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "sku": 1019688,\n    "name": "5-Year Protection Plan - Geek Squad",\n    "type": "BlackTie",\n    "totalQuantity": 10\n  },\n  "error": null\n}\n')),(0,o.kt)("p",null,"When you make a request, it goes through the API gateway to the inventory service. Ultimately, it ends up calling a ",(0,o.kt)("inlineCode",{parentName:"p"},"retrieveSKU")," function which looks as follows:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'},"\nstatic async retrieveSKU(_productId: number): Promise<IProduct> {\n    /**\n    Get current Quantity of a Product.\n\n    :param _productId: Product Id\n    :return: Product with Quantity\n    */\n    const repository = ProductRepo.getRepository();\n    let retItem: IProduct = {};\n\n    if (repository && _productId) {\n        //fetch product by ID (using redis om library)\n        const product = <IProduct>await repository.fetch(_productId.toString());\n\n        if (product) {\n            retItem = {\n                sku: product.sku,\n                name: product.name,\n                type: product.type,\n                totalQuantity: product.totalQuantity\n            }\n        }\n        else {\n            throw `Product with Id ${_productId} not found`;\n        }\n    }\n    else {\n        throw `Input params failed !`;\n    }\n\n    return retItem;\n}\n\n")))}c.isMDXComponent=!0}}]);