"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[728],{85162:(e,t,s)=>{s.d(t,{Z:()=>r});var a=s(67294),n=s(86010);const i="tabItem_Ymn6";function r(e){let{children:t,hidden:s,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(i,r),hidden:s},t)}},65488:(e,t,s)=>{s.d(t,{Z:()=>p});var a=s(87462),n=s(67294),i=s(86010),r=s(72389),o=s(67392),l=s(7094),d=s(12466);const m="tabList__CuJ",u="tabItem_LNqP";function c(e){var t;const{lazy:s,block:r,defaultValue:c,values:p,groupId:h,className:g}=e,k=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=p??k.map((e=>{let{props:{value:t,label:s,attributes:a}}=e;return{value:t,label:s,attributes:a}})),v=(0,o.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===c?c:c??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==b&&!f.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:y}=(0,l.U)(),[R,N]=(0,n.useState)(b),I=[],{blockElementScrollPositionUntilNextRender:x}=(0,d.o5)();if(null!=h){const e=w[h];null!=e&&e!==R&&f.some((t=>t.value===e))&&N(e)}const S=e=>{const t=e.currentTarget,s=I.indexOf(t),a=f[s].value;a!==R&&(x(t),N(a),null!=h&&y(h,String(a)))},C=e=>{var t;let s=null;switch(e.key){case"Enter":S(e);break;case"ArrowRight":{const t=I.indexOf(e.currentTarget)+1;s=I[t]??I[0];break}case"ArrowLeft":{const t=I.indexOf(e.currentTarget)-1;s=I[t]??I[I.length-1];break}}null==(t=s)||t.focus()};return n.createElement("div",{className:(0,i.Z)("tabs-container",m)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},g)},f.map((e=>{let{value:t,label:s,attributes:r}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:R===t?0:-1,"aria-selected":R===t,key:t,ref:e=>I.push(e),onKeyDown:C,onClick:S},r,{className:(0,i.Z)("tabs__item",u,null==r?void 0:r.className,{"tabs__item--active":R===t})}),s??t)}))),s?(0,n.cloneElement)(k.filter((e=>e.props.value===R))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==R})))))}function p(e){const t=(0,r.Z)();return n.createElement(c,(0,a.Z)({key:String(t)},e))}},71131:(e,t,s)=>{s.d(t,{Z:()=>h});var a=s(67294),n=s(3905),i=s(52195);const r="riContainer_bco2",o="riDescriptionShort_E27B",l="riDetail_wzFs",d="riIcon_yDou",m="riTitle_x6vI",u="riDescription_RDnu",c="riMore_apRP";var p=s(86010);const h=e=>{const[t,s]=a.useState(!1);return a.createElement("a",{href:e.page,className:r},a.createElement("div",{className:o},a.createElement("div",{className:d},a.createElement("span",{className:"fe fe-zap"})),a.createElement("div",{className:l},a.createElement("div",{className:m},a.createElement("a",{href:e.page},e.title)),a.createElement("div",{className:u},e.description,a.Children.count(e.children)>0&&a.createElement("span",{className:(0,p.Z)(c,"fe","fe-more-horizontal"),onClick:()=>s(!t)})))),t&&a.createElement("div",{className:"ri-description-long"},a.createElement(n.Zo,{components:i.Z},e.children)))}},87567:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=s(87462),n=(s(67294),s(3905));s(65488),s(85162),s(44996),s(71131);const i={id:"index-streams",title:"Use Redis Streams Consumer Groups with RedisInsight",sidebar_label:"Use Redis Streams Consumer Groups with RedisInsight",slug:"/explore/redisinsight/streams",authors:["ajeet"]},r=void 0,o={unversionedId:"explore/redisinsight/streams/index-streams",id:"explore/redisinsight/streams/index-streams",title:"Use Redis Streams Consumer Groups with RedisInsight",description:"Redis is an open source, in-memory, key-value data store most commonly used as a primary database, cache, message broker, and message queue. Redis cache delivers sub-millisecond response times, enabling fast and powerful real-time applications in industries such as gaming, fintech, ad-tech, social media, healthcare, and IoT. The Stream is a new data type introduced with Redis 5.0, which models a log data structure in a more abstract way.",source:"@site/docs/explore/redisinsight/streams/index-streams.mdx",sourceDirName:"explore/redisinsight/streams",slug:"/explore/redisinsight/streams",permalink:"/explore/redisinsight/streams",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/explore/redisinsight/streams/index-streams.mdx",tags:[],version:"current",lastUpdatedAt:1655488379,formattedLastUpdatedAt:"Jun 17, 2022",frontMatter:{id:"index-streams",title:"Use Redis Streams Consumer Groups with RedisInsight",sidebar_label:"Use Redis Streams Consumer Groups with RedisInsight",slug:"/explore/redisinsight/streams",authors:["ajeet"]},sidebar:"docs",previous:{title:"Manage Your Redis Cluster using RedisInsight Cluster Management Tool",permalink:"/explore/redisinsight/cluster"},next:{title:"RedisInsight Profiler Tool - Analyze Your Redis Commands Using Redis Monitor Command",permalink:"/explore/redisinsight/profiler"}},l={},d=[{value:"Prerequisite:",id:"prerequisite",level:2},{value:"Step 1. Run a Redis server",id:"step-1-run-a-redis-server",level:3},{value:"Step 2: Download RedisInsight",id:"step-2-download-redisinsight",level:2},{value:"Step 3. Cloning the repository",id:"step-3-cloning-the-repository",level:2},{value:"Step 4. Run the producer(Post a new message)",id:"step-4-run-the-producerpost-a-new-message",level:2},{value:"Step 5. Run the consumer(Consume messages)",id:"step-5-run-the-consumerconsume-messages",level:2},{value:"Step 6: Posting the new messages",id:"step-6-posting-the-new-messages",level:2},{value:"Additional Links",id:"additional-links",level:2}],m={toc:d};function u(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Redis is an open source, in-memory, key-value data store most commonly used as a primary database, cache, message broker, and message queue. Redis cache delivers sub-millisecond response times, enabling fast and powerful real-time applications in industries such as gaming, fintech, ad-tech, social media, healthcare, and IoT. The Stream is a new data type introduced with Redis 5.0, which models a log data structure in a more abstract way.\nA Redis Stream is a Redis data type that represents a log, so you can add new information and message in an append-only mode.\nRedis Streams lets you build \u201cKafka-like\u201d applications, which can:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Create applications that publish and consume messages. Nothing extraordinary here, you could already do that with Redis Pub/Sub(Publisher/Subscriber)."),(0,n.kt)("li",{parentName:"ul"},"Consume messages that are published even when the client application (consumer) is not running. This is a big difference from Redis Pub/Sub."),(0,n.kt)("li",{parentName:"ul"},"Consume messages starting from a specific point. For example, read the whole history or only new messages.")),(0,n.kt)("p",null,"In addition, Redis Streams has the concept of a consumer group. Redis Streams consumer groups, like the similar concept in ",(0,n.kt)("a",{parentName:"p",href:"https://kafka.apache.org/"},"Apache Kafka"),", allows client applications to consume messages in a distributed fashion (multiple clients), making it easy to scale and create highly available systems."),(0,n.kt)("p",null,"Let\u2019s dive under the covers and see ",(0,n.kt)("a",{parentName:"p",href:"https://redis.io/topics/streams-intro"},"Redis Streams")," through the lens of RedisInsight. You will see how to use the ",(0,n.kt)("a",{parentName:"p",href:"https://developer.redis.com/develop/java/#using-lettuce"},"Lettuce Java client")," to publish and consume messages using consumer group.This is the first basic example that uses a single consumer."),(0,n.kt)("h2",{id:"prerequisite"},"Prerequisite:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://openjdk.java.net/install/"},"Install OpenJDK")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://maven.apache.org/install.html"},"Install Apache Maven")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://developer.redis.com/create"},"Install Redis"))),(0,n.kt)("h3",{id:"step-1-run-a-redis-server"},"Step 1. Run a Redis server"),(0,n.kt)("p",null,"Redis is an open source, in-memory, key-value data store most commonly used as a primary database, cache, message broker, and queue. Redis delivers sub-millisecond response times, enabling fast and powerful real-time applications in industries such as gaming, fintech, ad-tech, social media, healthcare, and IoT. You can run a Redis database directly over your local mac os or in a container. If you have Docker installed in your sytem, type the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"}," docker run -d -p 6379:6379 redislabs/redismod\n")),(0,n.kt)("p",null,"You can connect to Redis server using the ",(0,n.kt)("inlineCode",{parentName:"p"},"redis-cli")," command like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"}," redis-cli\n")),(0,n.kt)("p",null,"The above command will make a connection to the Redis server. It will then present a prompt that allows you to run Redis commands.\nPlease note that you can connect to Redis server using multiple clients."),(0,n.kt)("h2",{id:"step-2-download-redisinsight"},"Step 2: Download RedisInsight"),(0,n.kt)("p",null,"To install RedisInsight on your local system, you need to first download the software from the Redis website."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://redis.com/redis-enterprise/redis-insight/#insight-form"},"Click this link ")," to access a form that allows you to select the operating system of your choice."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"My Image",src:s(67414).Z,width:"1464",height:"1256"})),(0,n.kt)("p",null,"Run the installer. After the web server starts, open http://YOUR_HOST_IP:8001 and add a Redis database connection."),(0,n.kt)("p",null,'Select "Connect to a Redis database"\n',(0,n.kt)("img",{alt:"My Image",src:s(23841).Z,width:"1790",height:"838"})),(0,n.kt)("p",null,"Enter the requested details, including Name, Host (endpoint), Port, and Password. Then click \u201cADD REDIS DATABASE\u201d."),(0,n.kt)("h2",{id:"step-3-cloning-the-repository"},"Step 3. Cloning the repository"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"}," git clone https://github.com/redis-developer/redis-streams-101-java\n cd redis-streams-101-java\n mvn clean verify\n")),(0,n.kt)("h2",{id:"step-4-run-the-producerpost-a-new-message"},"Step 4. Run the producer(Post a new message)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'\n mvn exec:java -Dexec.mainClass="com.kanibl.redis.streams.simple.RedisStreams101Producer" -Dexec.args="5"\n\n Downloaded from central: https://repo.maven.apache.org/maven2/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar (472 kB at 450 kB/s)\n Downloaded from central: https://repo.maven.apache.org/maven2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar (26 kB at 25 kB/s)\n Downloaded from central: https://repo.maven.apache.org/maven2/commons-codec/commons-codec/1.11/commons-codec-1.11.jar (335 kB at 313 kB/s)\n\n Sending 5 message(s)\n May 18, 2021 1:07:00 PM io.lettuce.core.EpollProvider <clinit>\n INFO: Starting without optional epoll library\n May 18, 2021 1:07:00 PM io.lettuce.core.KqueueProvider <clinit>\n INFO: Starting without optional kqueue library\n       Message 1621343220998-0 : {sensor_ts=1621343220975, loop_info=0, speed=15, direction=270} posted\n       Message 1621343221009-0 : {sensor_ts=1621343221007, loop_info=1, speed=15, direction=270} posted\n       Message 1621343221016-0 : {sensor_ts=1621343221011, loop_info=2, speed=15, direction=270} posted\n       Message 1621343221019-0 : {sensor_ts=1621343221017, loop_info=3, speed=15, direction=270} posted\n       Message 1621343221023-0 : {sensor_ts=1621343221021, loop_info=4, speed=15, direction=270} posted\n\n\n [INFO] ------------------------------------------------------------------------\n [INFO] BUILD SUCCESS\n [INFO] ------------------------------------------------------------------------\n [INFO] Total time:  9.102 s\n [INFO] Finished at: 2021-05-18T13:07:01Z\n [INFO] ------------------------------------------------------------------------\n\n')),(0,n.kt)("h2",{id:"step-5-run-the-consumerconsume-messages"},"Step 5. Run the consumer(Consume messages)"),(0,n.kt)("p",null,"Open a new terminal and run this command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n mvn exec:java -Dexec.main\n")),(0,n.kt)("p",null,"The consumer will start and consume the message you just posted, and wait for any new messages."),(0,n.kt)("h2",{id:"step-6-posting-the-new-messages"},"Step 6: Posting the new messages"),(0,n.kt)("p",null,"In the first terminal, let us post new entries to a Redis stream:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},' mvn exec:java -Dexec.mainClass="com.kanibl.redis.streams.simple.RedisStreams101Producer" -Dexec.args="100"\n')),(0,n.kt)("p",null,"Let us try to visualise the latest message using the RedisInsight browser tool. Make sure \u2018Stream Data\u2019 is selected and select any one of the streams. For a specified stream, you\u2019ll find a table showing data in that stream along with a timestamp of when each entry was added."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"alt_text",src:s(34353).Z,width:"1600",height:"926"})),(0,n.kt)("p",null,"To see the processing side of the stream select \u2018Stream Data\u201d. You will see 105 records under the streaming data."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"alt_text",src:s(37145).Z,width:"512",height:"274"})),(0,n.kt)("p",null,"Click on \u201cConsumer Group\u201d to see application_1 as promising active consumers."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"alt_text",src:s(42808).Z,width:"1600",height:"1153"})),(0,n.kt)("p",null,"RedisInsight also provide you to select fields as shown under \u201cView Columns\u201d section."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"alt_text",src:s(87584).Z,width:"1600",height:"884"})),(0,n.kt)("p",null,"It also displays pending items/messages for the specific streams as shown above."),(0,n.kt)("h2",{id:"additional-links"},"Additional Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/explore/redisinsight/slowlog"},"Slowlog Configuration using RedisInsight")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/explore/redisinsight/browser"},"Explore Redis keys using RedisInsight browser tool")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/explore/redisinsight/memoryanalyzer"},"Memory Analysis using RedisInsight")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://redis.io/commands/xadd/"},"Add data to a Redis Stream using the XADD command")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://redis.io/commands/xreadgroup/"},"XREAD with support for consumer groups using XREADGROUP command")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://redis.io/commands/xread/"},"How to use the XREAD command (XREAD count)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://redis.io/commands/xack/"},"Remove one or multiple messages from consumer group using XACK command")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://redis.io/docs/manual/data-types/streams/#removing-single-items-from-a-stream"},"Removing single items from a stream using stream ID"))),(0,n.kt)("h2",{id:""}),(0,n.kt)("div",null,(0,n.kt)("a",{href:"https://launchpad.redis.com",target:"_blank",rel:"noopener",className:"link"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'<img\n  src="/img/launchpad.png"\n  className="thumb"\n  loading="lazy"\n  alt="Redis Launchpad"\n/>\n')))))}u.isMDXComponent=!0},34353:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/images/image16-f836b92d6eb88d65708f265ceb5b3999.png"},37145:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/images/image17-155c7a654363e8bc371e37c1791d7b82.png"},42808:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/images/image18-c2bc893d9a93df35ab96cef4756bb0ba.png"},87584:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/images/image19-efa23e18b80c286c2570b7e209d58a6b.png"},23841:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/images/redisinsight4-c10ff2035f21df96053f824b1eefd790.png"},67414:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/images/redisinsightinstall-b920e816c541305ea0ea2dd2593f5a0f.png"}}]);