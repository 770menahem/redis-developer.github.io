"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[5979],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),f=a,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||l;return t?r.createElement(m,s(s({ref:n},c),{},{components:t})):r.createElement(m,s({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,s=new Array(l);s[0]=p;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<l;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(67294),a=t(86010);const l="tabItem_Ymn6";function s(e){let{children:n,hidden:t,className:s}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,s),hidden:t},n)}},65488:(e,n,t)=>{t.d(n,{Z:()=>f});var r=t(87462),a=t(67294),l=t(86010),s=t(72389),o=t(67392),i=t(7094),u=t(12466);const c="tabList__CuJ",d="tabItem_LNqP";function p(e){var n;const{lazy:t,block:s,defaultValue:p,values:f,groupId:m,className:g}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=f??h.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),T=(0,o.l)(k,((e,n)=>e.value===n.value));if(T.length>0)throw new Error(`Docusaurus error: Duplicate values "${T.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const E=null===p?p:p??(null==(n=h.find((e=>e.props.default)))?void 0:n.props.value)??h[0].props.value;if(null!==E&&!k.some((e=>e.value===E)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${E}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:S}=(0,i.U)(),[O,A]=(0,a.useState)(E),b=[],{blockElementScrollPositionUntilNextRender:R}=(0,u.o5)();if(null!=m){const e=y[m];null!=e&&e!==O&&k.some((n=>n.value===e))&&A(e)}const v=e=>{const n=e.currentTarget,t=b.indexOf(n),r=k[t].value;r!==O&&(R(n),A(r),null!=m&&S(m,String(r)))},N=e=>{var n;let t=null;switch(e.key){case"Enter":v(e);break;case"ArrowRight":{const n=b.indexOf(e.currentTarget)+1;t=b[n]??b[0];break}case"ArrowLeft":{const n=b.indexOf(e.currentTarget)-1;t=b[n]??b[b.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":s},g)},k.map((e=>{let{value:n,label:t,attributes:s}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:e=>b.push(e),onKeyDown:N,onClick:v},s,{className:(0,l.Z)("tabs__item",d,null==s?void 0:s.className,{"tabs__item--active":O===n})}),t??n)}))),t?(0,a.cloneElement)(h.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==O})))))}function f(e){const n=(0,s.Z)();return a.createElement(p,(0,r.Z)({key:String(n)},e))}},74476:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var r=t(87462),a=(t(67294),t(3905)),l=t(65488),s=t(85162);const o={},i=void 0,u={unversionedId:"howtos/quick-start/cheat-sheets/search-and-query",id:"howtos/quick-start/cheat-sheets/search-and-query",title:"search-and-query",description:"<Tabs",source:"@site/docs/howtos/quick-start/cheat-sheets/search-and-query.mdx",sourceDirName:"howtos/quick-start/cheat-sheets",slug:"/howtos/quick-start/cheat-sheets/search-and-query",permalink:"/howtos/quick-start/cheat-sheets/search-and-query",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/quick-start/cheat-sheets/search-and-query.mdx",tags:[],version:"current",lastUpdatedAt:1695062274,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{}},c={},d=[],p={toc:d};function f(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(l.Z,{defaultValue:"CLI",groupId:"REDIS_CHEAT_SHEET",values:[{label:"CLI",value:"CLI"},{label:"NodeRedis",value:"NODE_JS"}],mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"CLI",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("strong",null,"Command")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Syntax")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Example")),(0,a.kt)("td",null,(0,a.kt)("strong",null,"Output"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"FT.CREATE"),(0,a.kt)("td",{class:"cst-large-code"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nFT.CREATE index \n  [ON HASH | JSON] \n  [PREFIX count prefix [prefix ...]] \n  [FILTER {filter}]\n  SCHEMA \n  field_name [AS alias] TEXT | TAG | NUMERIC | GEO | VECTOR | GEOSHAPE [ SORTABLE [UNF]] \n  [NOINDEX] \n   ...\n"))),(0,a.kt)("td",{class:"cst-large-code"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'\nFT.CREATE staff:index \n    ON JSON \n    PREFIX 1 staff: \n    SCHEMA \n    "$.name" AS name TEXT \n    "$.age" AS age NUMERIC \n    "$.isSingle"  AS isSingle TAG \n    \'$["skills"][*]\' AS skills TAG SEPARATOR "|"\n'))),(0,a.kt)("td",null,"OK")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Create an index with the given specification.",(0,a.kt)("em",null,"Time Complexity:")," O(K) where K is the number of fields in the document, O(N) for keys in the keySpace")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"FT.SEARCH"),(0,a.kt)("td",{class:"cst-large-code"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nFT.SEARCH index query \n  [FILTER numeric_field min max [ FILTER numeric_field min max ...]] \n  [RETURN count identifier [AS property] [ identifier [AS property] ...]] \n  [SORTBY sortby [ ASC | DESC] [WITHCOUNT]] \n  [LIMIT offset num] \n  [PARAMS nargs name value [ name value ...]] \n"))),(0,a.kt)("td",{class:"cst-large-code"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'\nJSON.SET "staff:1" "$" \'{"name":"Bob","age":22,"isSingle":true,"skills":["NodeJS","MongoDB","React"]}\' \n\nJSON.SET "staff:2" "$" \'{"name":"Alex","age":45,"isSingle":true,"skills":["Python","MySQL","Angular"]}\' \n\nFT.SEARCH staff:index \n  "(@name:\'alex\')" \n  RETURN 1 $ LIMIT 0 10 \n\nFT.SEARCH staff:index \n  "((@isSingle:{true}) (@age:[(18 +inf]))" \n  RETURN 1 $ LIMIT 0 10   \n'))),(0,a.kt)("td",null,"Matching documents data")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Search the index with a query, returning either documents or just ids. ",(0,a.kt)("em",null,"Time Complexity:")," O(N)")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"FT.AGGREGATE"),(0,a.kt)("td",{class:"cst-large-code"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nFT.AGGREGATE index query \n  [LOAD count field [field ...]] \n  [ GROUPBY nargs property [property ...] [ REDUCE function nargs arg [arg ...] [AS name] ...\n  [ SORTBY nargs [ property ASC | DESC [ property ASC | DESC ...]] [MAX num] [WITHCOUNT] \n  [ APPLY expression AS name  ...\n  [ LIMIT offset num] \n  [FILTER filter] \n  [ PARAMS nargs name value [ name value ...]] \n"))),(0,a.kt)("td",{class:"cst-large-code"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'\nFT.AGGREGATE staff:index "(@age:[(18 +inf])"\n  GROUPBY 1 @age\n  \tREDUCE COUNT_DISTINCT 1 @name AS staff_count\n'))),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\n         | age | staff_count |\n         | ----| ------------|\n         | 22  | 1           |\n         | 45  | 1           |\n")))),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Run a search query on an index, and perform aggregate transformations on the results.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"FT.INFO"),(0,a.kt)("td",null,"FT.INFO index"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nFT.INFO staff:index\n"))),(0,a.kt)("td",null,"A list of configuration parameters and stats for the index.")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Return information and statistics on the index.",(0,a.kt)("em",null,"Time Complexity:")," O(1)")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"FT.DROPINDEX"),(0,a.kt)("td",null,"FT.DROPINDEX index [DD]"),(0,a.kt)("td",null,(0,a.kt)("pre",null,(0,a.kt)("code",null,"\nFT.DROPINDEX staff:index\n"))),(0,a.kt)("td",null,"OK")),(0,a.kt)("tr",null,(0,a.kt)("td",{colspan:"4"},(0,a.kt)("em",null,"Description:")," Dropping existing index.",(0,a.kt)("em",null,"Time Complexity:"),"O(1) or O(N) if documents are deleted, where N is the number of keys in the keyspace"))))),(0,a.kt)(s.Z,{value:"NODE_JS",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const STAFF_INDEX_KEY = 'staff:index';\nconst STAFF_KEY_PREFIX = 'staff:';\n\ntry {\n  /*\n       FT.DROPINDEX index [DD]\n       Dropping existing index\n       O(1) or O(N) if documents are deleted, where N is the number of keys in the keyspace\n      */\n  await client.ft.dropIndex(STAFF_INDEX_KEY);\n} catch (indexErr) {\n  console.error(indexErr);\n}\n\n/*\n   FT.CREATE index [ON HASH | JSON] [PREFIX n] SCHEMA [field type [field type ...]]\n   Create an index with the given specification\n   O(K) where K is the number of fields in the document, O(N) for keys in the keyspace\n */\nconst schema: RediSearchSchema = {\n  '$.name': {\n    type: SchemaFieldTypes.TEXT,\n    AS: 'name',\n  },\n  '$.age': {\n    type: SchemaFieldTypes.NUMERIC,\n    AS: 'age',\n  },\n  '$.isSingle': {\n    type: SchemaFieldTypes.TAG,\n    AS: 'isSingle',\n  },\n  '$[\"skills\"][*]': {\n    type: SchemaFieldTypes.TAG,\n    AS: 'skills',\n    SEPARATOR: '|',\n  },\n};\nawait client.ft.create(STAFF_INDEX_KEY, schema, {\n  ON: 'JSON',\n  PREFIX: STAFF_KEY_PREFIX,\n});\n\n//-------addStaffEntries for search\nawait client.json.set('staff:1', '.', {\n  name: 'Bob',\n  age: 22,\n  isSingle: true,\n  skills: ['NodeJS', 'MongoDB', 'React'],\n});\nawait client.json.set('staff:2', '.', {\n  name: 'Alex',\n  age: 45,\n  isSingle: true,\n  skills: ['Python', 'MySQL', 'Angular'],\n});\n//------\n\n/*\n    FT.SEARCH index query\n    Search the index with a query, returning either documents or just ids\n    O(N)\n    */\n\nconst query1 = '*'; //all records\nconst query2 = \"(@name:'alex')\"; // name == 'alex'\nconst query3 = '( (@isSingle:{true}) (@age:[(18 +inf]) )'; //isSingle == true && age > 18\nconst query4 = '(@skills:{NodeJS})';\nconst searchResult = await client.ft.search(\n  STAFF_INDEX_KEY,\n  query1, //query2, query3, query4\n  {\n    RETURN: ['name', 'age', 'isSingle'],\n    LIMIT: {\n      from: 0,\n      size: 10,\n    },\n  },\n);\nconsole.log(JSON.stringify(searchResult));\n//{\"total\":1,\"documents\":[{\"id\":\"staff:2\",\"value\":{\"name\":\"Alex\",\"age\":\"45\",\"isSingle\":\"1\"}}]}\n\n/*\n    FT.AGGREGATE index query\n    Run a search query on an index, and perform aggregate transformations on the results\n\n    FT.AGGREGATE staff:index \"(@age:[(10 +inf])\" \n      GROUPBY 1 @age \n        REDUCE COUNT 0 AS userCount\n      SORTBY 1 @age\n      LIMIT 0 10\n    */\nconst aggregateResult = await client.ft.aggregate(\n  STAFF_INDEX_KEY,\n  '(@age:[(10 +inf])',\n  {\n    STEPS: [\n      {\n        type: AggregateSteps.GROUPBY,\n        properties: ['@age'],\n        REDUCE: [\n          {\n            type: AggregateGroupByReducers.COUNT,\n            AS: 'userCount',\n          },\n        ],\n      },\n      {\n        type: AggregateSteps.SORTBY,\n        BY: '@age',\n      },\n      {\n        type: AggregateSteps.LIMIT,\n        from: 0,\n        size: 10,\n      },\n    ],\n  },\n);\nconsole.log(JSON.stringify(aggregateResult));\n//{\"total\":2,\"results\":[{\"age\":\"22\",\"userCount\":\"1\"},{\"age\":\"45\",\"userCount\":\"1\"}]}\n//----\n\n/*\n    FT.INFO index\n    Return information and statistics on the index\n    O(1)\n    */\nconst infoResult = await client.ft.info(STAFF_INDEX_KEY);\nconsole.log(infoResult);\n/**\n     {\n        indexName: 'staff:index',\n        numDocs: '2',\n        maxDocId: '4',\n        stopWords: 2\n        ...\n     }\n     */\n")))))}f.isMDXComponent=!0}}]);