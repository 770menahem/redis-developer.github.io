"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[4479],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,y=d["".concat(u,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(y,i(i({ref:t},l),{},{components:n})):r.createElement(y,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},82349:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/real-time-inventory/available-to-promise/api/update-sku",id:"howtos/solutions/real-time-inventory/available-to-promise/api/update-sku",title:"update-sku",description:"The code that follows shows an example API request and response for updateSKU activity.",source:"@site/docs/howtos/solutions/real-time-inventory/available-to-promise/api/update-sku.mdx",sourceDirName:"howtos/solutions/real-time-inventory/available-to-promise/api",slug:"/howtos/solutions/real-time-inventory/available-to-promise/api/update-sku",permalink:"/howtos/solutions/real-time-inventory/available-to-promise/api/update-sku",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/real-time-inventory/available-to-promise/api/update-sku.mdx",tags:[],version:"current",lastUpdatedAt:1684462271,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{}},u={},p=[],l={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The code that follows shows an example API request and response for updateSKU activity."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"updateSKU API Request")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'POST http://localhost:3000/api/updateSKU\n{\n    "sku":1019688,\n    "quantity":25\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"updateSKU API Response")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "sku": 1019688,\n    "name": "5-Year Protection Plan - Geek Squad",\n    "type": "BlackTie",\n    "totalQuantity": 25 //updated value\n  },\n  "error": null\n}\n')),(0,o.kt)("p",null,"When you make a request, it goes through the API gateway to the inventory service. Ultimately, it ends up calling a ",(0,o.kt)("inlineCode",{parentName:"p"},"updateSKU")," function which looks as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/inventory-service.ts"',title:'"src/inventory-service.ts"'}," static async updateSKU(_productId: number, _quantity: number): Promise<IProduct> {\n        /**\n        Set Quantity of a Product.\n\n        :param _productId: Product Id\n        :param _quantity: new quantity\n        :return: Product with Quantity\n        */\n        const repository = ProductRepo.getRepository();\n        let retItem: IProduct = {};\n\n        if (repository && _productId && _quantity >= 0) {\n            //fetch product by ID (using redis om library)\n            const product = <IProduct>await repository.fetch(_productId.toString());\n\n            if (product) {\n                //update the product fields\n                product.totalQuantity = _quantity;\n\n                // save the modified product\n                const savedItem = <IProduct>await repository.save(<RedisEntity>product);\n\n                retItem = {\n                    sku: savedItem.sku,\n                    name: savedItem.name,\n                    type: savedItem.type,\n                    totalQuantity: savedItem.totalQuantity\n                }\n            }\n            else {\n                throw `Product with Id ${_productId} not found`;\n            }\n        }\n        else {\n            throw `Input params failed !`;\n        }\n\n        return retItem;\n    }\n")))}c.isMDXComponent=!0}}]);