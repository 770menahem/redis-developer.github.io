"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[1380],{3905:(e,t,n)=>{n.d(t,{Zo:()=>y,kt:()=>k});var l=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=l.createContext({}),u=function(e){var t=l.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},y=function(e){var t=u(e.components);return l.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,y=s(e,["components","mdxType","originalType","parentName"]),c=u(n),k=r,m=c["".concat(i,".").concat(k)]||c[k]||d[k]||a;return n?l.createElement(m,o(o({ref:t},y),{},{components:n})):l.createElement(m,o({ref:t},y))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var l=n(67294),r=n(86010);const a="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return l.createElement("div",{role:"tabpanel",className:(0,r.Z)(a,o),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>k});var l=n(87462),r=n(67294),a=n(86010),o=n(72389),s=n(67392),i=n(7094),u=n(12466);const y="tabList__CuJ",d="tabItem_LNqP";function c(e){var t;const{lazy:n,block:o,defaultValue:c,values:k,groupId:m,className:p}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=k??h.map((e=>{let{props:{value:t,label:n,attributes:l}}=e;return{value:t,label:n,attributes:l}})),f=(0,s.l)(v,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===c?c:c??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==b&&!v.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:T}=(0,i.U)(),[O,E]=(0,r.useState)(b),x=[],{blockElementScrollPositionUntilNextRender:I}=(0,u.o5)();if(null!=m){const e=g[m];null!=e&&e!==O&&v.some((t=>t.value===e))&&E(e)}const w=e=>{const t=e.currentTarget,n=x.indexOf(t),l=v[n].value;l!==O&&(I(t),E(l),null!=m&&T(m,String(l)))},N=e=>{var t;let n=null;switch(e.key){case"Enter":w(e);break;case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;n=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;n=x[t]??x[x.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,a.Z)("tabs-container",y)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":o},p)},v.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,l.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:e=>x.push(e),onKeyDown:N,onClick:w},o,{className:(0,a.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":O===t})}),n??t)}))),n?(0,r.cloneElement)(h.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==O})))))}function k(e){const t=(0,o.Z)();return r.createElement(c,(0,l.Z)({key:String(t)},e))}},32936:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>i,default:()=>k,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var l=n(87462),r=(n(67294),n(3905)),a=n(65488),o=n(85162);const s={},i=void 0,u={unversionedId:"howtos/quick-start/cheat-sheets/strings",id:"howtos/quick-start/cheat-sheets/strings",title:"strings",description:"<Tabs",source:"@site/docs/howtos/quick-start/cheat-sheets/strings.mdx",sourceDirName:"howtos/quick-start/cheat-sheets",slug:"/howtos/quick-start/cheat-sheets/strings",permalink:"/howtos/quick-start/cheat-sheets/strings",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/quick-start/cheat-sheets/strings.mdx",tags:[],version:"current",lastUpdatedAt:1695078274,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{}},y={},d=[],c={toc:d};function k(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(a.Z,{defaultValue:"CLI",groupId:"REDIS_CHEAT_SHEET",values:[{label:"CLI",value:"CLI"},{label:"node-redis",value:"NODE_JS"},{label:"redis-py",value:"PYTHON"},{label:"NRedisStack",value:"C#"},{label:"Jedis",value:"JAVA"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"CLI",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("strong",null,"Command")),(0,r.kt)("td",null,(0,r.kt)("strong",null,"Syntax")),(0,r.kt)("td",null,(0,r.kt)("strong",null,"Example")),(0,r.kt)("td",null,(0,r.kt)("strong",null,"Output"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"SET"),(0,r.kt)("td",null,"SET key value"),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",null,'\nSET myKey "Hello"\n'))),(0,r.kt)("td",null,'"OK"')),(0,r.kt)("tr",null,(0,r.kt)("td",{colspan:"4"},(0,r.kt)("em",null,"Description:")," Set key to hold the string value. If key already holds a value, it is overwritten, regardless of its type.",(0,r.kt)("em",null,"Time Complexity:")," O(1)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"GET"),(0,r.kt)("td",null,"GET key"),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",null,"\nGET myKey\n"))),(0,r.kt)("td",null,'"Hello"')),(0,r.kt)("tr",null,(0,r.kt)("td",{colspan:"4"},(0,r.kt)("em",null,"Description:")," Get the string value of key. If the key does not exist the special value nil is returned.",(0,r.kt)("em",null,"Time Complexity:")," O(1)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"MGET"),(0,r.kt)("td",null,"MGET key [key ...]"),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",null,"\nMGET myKey nonExistentKey\n"))),(0,r.kt)("td",null,'1) "Hello" 2) (nil)')),(0,r.kt)("tr",null,(0,r.kt)("td",{colspan:"4"},(0,r.kt)("em",null,"Description:")," Returns the values of all specified keys. For every key that does not hold a string value or does not exist, the special value nil is returned.",(0,r.kt)("em",null,"Time Complexity:")," O(N)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"INCR"),(0,r.kt)("td",null,"INCR key"),(0,r.kt)("td",null,(0,r.kt)("pre",null,(0,r.kt)("code",null,"\nINCR myCounter\n"))),(0,r.kt)("td",null,"(integer) 1")),(0,r.kt)("tr",null,(0,r.kt)("td",{colspan:"4"},(0,r.kt)("em",null,"Description:")," Increments the number stored at key by one. If the key does not exist, it is set to 0 before performing the operation.",(0,r.kt)("em",null,"Time Complexity:")," O(1)"))))),(0,r.kt)(o.Z,{value:"NODE_JS",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/*\n  SET key value\n  Set key to hold the string value. If key already holds a value, it is overwritten, regardless of its type.\n  Time Complexity: O(1)\n  */\nconst setResult = await client.set('myKey', 'Hello');\nconsole.log(setResult); // \"OK\"\n\n/*\n  GET key\n  Get the string value of key. If the key does not exist the special value nil is returned.\n  Time Complexity: O(1)\n  */\nconst getResult = await client.get('myKey');\nconsole.log(getResult); // \"Hello\"\n\n/*\n  MGET key [key ...]\n  Returns the values of all specified keys. For every key that does not hold a string value or does not exist, the special value nil is returned.\n  Time Complexity: O(N)\n  */\nconst mGetResult = await client.mGet(['myKey', 'nonExistentKey']);\nconsole.log(mGetResult); // [\"Hello\", null]\n\n/*\n  INCR key\n  Increments the number stored at key by one. If the key does not exist, it is set to 0 before performing the operation.\n  Time Complexity: O(1)\n  */\nconst incrResult = await client.incr('myCounter');\nconsole.log(incrResult); // 1\n"))),(0,r.kt)(o.Z,{value:"PYTHON",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# SET key value\n# O(1)\n# Set key to hold the string value. If key already holds a value, it is overwritten, regardless of its type.\nr.set('mykey', 'Hello')\nr.set('mykey2', 'World')\n\n# GET key\n# O(1)\n# Get the string value of key. If the key does not exist the special value nil is returned.\nr.get('mykey')\n\n# MGET key [key ...]\n# O(N)\n# Returns the values of all specified keys. For every key that does not hold a string value or does not exist, the special value nil is returned.\nr.mget(['mykey', 'mykey2', 'nonexistantkey'])\n\n# INCR key\n# O(1)\n# Increments the number stored at key by one. If the key does not exist, it is set to 0 before performing the operation.\nr.delete('mykey')\nr.incr('mykey', 1)\nr.get('mykey')\n"))),(0,r.kt)(o.Z,{value:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'/*\n * SET key value\n * O(1)\n * Set key to hold the string value. If key already holds a value, it is\n * overwritten, regardless of its type.\n */\ndb.StringSet("mykey", "Hello");\ndb.StringSet("mykey2", "World");\n\n/*\n * GET key\n * O(1)\n * Get the value of key. If the key does not exist the special value nil\n */\ndb.StringGet("mykey");\n\n/*\n * MGET key [key ...]\n * O(N)\n * Returns the values of all specified keys. For every key that does not hold a\n * string value or does not exist, the special value nil is returned.\n */\ndb.StringGet(new RedisKey[] { "mykey", "mykey2", "nonexistantkey" });\n\n/*\n * INCR key\n * O(1)\n * Increments the number stored at key by one. If the key does not exist, it is\n * set to 0 before performing the operation.\n */\ndb.KeyDelete("mykey");\ndb.StringIncrement("mykey");\ndb.StringGet("mykey");\n'))),(0,r.kt)(o.Z,{value:"JAVA",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/*\n * SET key value\n * O(1)\n * Set key to hold the string value. If key already holds a value, it is\n * overwritten, regardless of its type.\n */\njedis.set("mykey", "Hello");\njedis.set("mykey2", "World");\n\n/*\n * GET key\n * O(1)\n * Get the value of key. If the key does not exist the special value nil\n */\njedis.get("mykey");\n\n/*\n * MGET key [key ...]\n * O(N)\n * Returns the values of all specified keys. For every key that does not hold a\n * string value or does not exist, the special value nil is returned.\n */\njedis.mget("mykey", "mykey2", "nonexistantkey");\n\n/*\n * INCR key\n * O(1)\n * Increments the number stored at key by one. If the key does not exist, it is\n * set to 0 before performing the operation.\n */\njedis.del("mykey");\njedis.incr("mykey");\njedis.get("mykey");\n')))))}k.isMDXComponent=!0}}]);