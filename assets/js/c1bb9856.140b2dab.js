"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[5980],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return h}});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),p=function(e){var r=a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=p(e.components);return a.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},c=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(t),h=n,m=c["".concat(l,".").concat(h)]||c[h]||d[h]||i;return t?a.createElement(m,s(s({ref:r},u),{},{components:t})):a.createElement(m,s({ref:r},u))}));function h(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,s=new Array(i);s[0]=c;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var p=2;p<i;p++)s[p]=t[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},58517:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var a=t(87462),n=t(63366),i=(t(67294),t(3905)),s=["components"],o={id:"index-usingruby",title:"How to query Graph data in Redis using Ruby",sidebar_label:"RedisGraph and Ruby",slug:"/howtos/redisgraph/using-ruby",authors:["ajeet"]},l=void 0,p={unversionedId:"howtos/redisgraph/using-ruby/index-usingruby",id:"howtos/redisgraph/using-ruby/index-usingruby",title:"How to query Graph data in Redis using Ruby",description:"RedisGraph is the first queryable Property Graph database to use sparse matrices to represent the adjacency matrix in graphs and linear algebra to query the graph.",source:"@site/docs/howtos/redisgraph/using-ruby/index-usingruby.mdx",sourceDirName:"howtos/redisgraph/using-ruby",slug:"/howtos/redisgraph/using-ruby",permalink:"/howtos/redisgraph/using-ruby",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/redisgraph/using-ruby/index-usingruby.mdx",tags:[],version:"current",lastUpdatedAt:1655485542,formattedLastUpdatedAt:"6/17/2022",frontMatter:{id:"index-usingruby",title:"How to query Graph data in Redis using Ruby",sidebar_label:"RedisGraph and Ruby",slug:"/howtos/redisgraph/using-ruby",authors:["ajeet"]},sidebar:"docs",previous:{title:"RedisGraph and Python",permalink:"/howtos/redisgraph/using-python"},next:{title:"RedisGraph and JavaScript",permalink:"/howtos/redisgraph/using-javascript"}},u={},d=[{value:"RedisGraph Ruby Client",id:"redisgraph-ruby-client",level:2},{value:"Step 1. Run RedisMod Docker container",id:"step-1-run-redismod-docker-container",level:3},{value:"Step 2. Verify if RedisGraph module is loaded",id:"step-2-verify-if-redisgraph-module-is-loaded",level:3},{value:"Step 3. Loading the RedisGraph Ruby Module",id:"step-3-loading-the-redisgraph-ruby-module",level:3},{value:"Step 4. Install the prerequisites",id:"step-4-install-the-prerequisites",level:3},{value:"Step 5. Write a Ruby code",id:"step-5-write-a-ruby-code",level:3},{value:"Step 6. Execute the Ruby code",id:"step-6-execute-the-ruby-code",level:3},{value:"Step 7. Monitor the Graph query",id:"step-7-monitor-the-graph-query",level:3},{value:"References",id:"references",level:3}],c={toc:d};function h(e){var r=e.components,t=(0,n.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"RedisGraph is the first queryable Property Graph database to use sparse matrices to represent the adjacency matrix in graphs and linear algebra to query the graph.\nFew of the notable features of RedisGraph includes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Based on the Property Graph Model"),(0,i.kt)("li",{parentName:"ul"},"Nodes (vertices) and Relationships (edges) that may have attributes"),(0,i.kt)("li",{parentName:"ul"},"Nodes that can be labeled"),(0,i.kt)("li",{parentName:"ul"},"Relationships have a relationship type"),(0,i.kt)("li",{parentName:"ul"},"Graphs represented as sparse adjacency matrices"),(0,i.kt)("li",{parentName:"ul"},"Cypher as query language"),(0,i.kt)("li",{parentName:"ul"},"Cypher queries translated into linear algebra expressions")),(0,i.kt)("p",null,"RedisGraph is based on a unique approach and architecture that translates Cypher queries to matrix operations executed over a GraphBLAS engine. This new design allows use cases like social graph operation, fraud detection, and real-time recommendation to be executed 10x \u2013 600x faster than any other graph database."),(0,i.kt)("h2",{id:"redisgraph-ruby-client"},"RedisGraph Ruby Client"),(0,i.kt)("p",null,"redisgraph-rb is a Ruby gem client for the RedisGraph module. It relies on redis-rb for Redis connection management and provides support for graph QUERY, EXPLAIN, and DELETE commands."),(0,i.kt)("p",null,"Follow the steps below to get started with RedisGraph with Ruby:"),(0,i.kt)("h3",{id:"step-1-run-redismod-docker-container"},"Step 1. Run RedisMod Docker container"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," docker run -p 6379:6379 --name redislabs/redismodCopy\n")),(0,i.kt)("h3",{id:"step-2-verify-if-redisgraph-module-is-loaded"},"Step 2. Verify if RedisGraph module is loaded"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," info modules\n # Modules\n module:name=graph,ver=20405,api=1,filters=0,usedby=[],using=[],options=[]\n")),(0,i.kt)("h3",{id:"step-3-loading-the-redisgraph-ruby-module"},"Step 3. Loading the RedisGraph Ruby Module"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," gem install redisgraph\n Fetching redisgraph-2.0.3.gem\n Successfully installed redisgraph-2.0.3\n 1 gem installed\n\n")),(0,i.kt)("h3",{id:"step-4-install-the-prerequisites"},"Step 4. Install the prerequisites"),(0,i.kt)("p",null,"To ensure prerequisites are installed, run the following: bundle install"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," bundle install\n")),(0,i.kt)("h3",{id:"step-5-write-a-ruby-code"},"Step 5. Write a Ruby code"),(0,i.kt)("p",null,'Copy the below sample code and save it in a file "test.rb"'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},' require \'redisgraph\'\n\n graphname = "sample"\n\n r = RedisGraph.new(graphname)\n\n cmd = """CREATE (:person {name: \'Jim\', age: 29})-[:works]->(:employer {name: \'Dunder Mifflin\'})"""\n response = r.query(cmd)\n response.stats\n\n cmd = """MATCH ()-[:works]->(e:employer) RETURN e"""\n\n response = r.query(cmd)\n\n response.print_resultset\n')),(0,i.kt)("h3",{id:"step-6-execute-the-ruby-code"},"Step 6. Execute the Ruby code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  ruby test.rb\n")),(0,i.kt)("h3",{id:"step-7-monitor-the-graph-query"},"Step 7. Monitor the Graph query"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},' redis-cli\n 127.0.0.1:6379> monitor\n OK\n 1632716792.038955 [0 172.17.0.1:57804] "info"\n 1632716792.041201 [0 172.17.0.1:57804] "GRAPH.QUERY" "sample" "CREATE (:person {name: \'Jim\', age: 29})-[:works]->(:employer {name: \'Dunder Mifflin\'})" "--compact"\n 1632716792.042751 [0 172.17.0.1:57804] "GRAPH.QUERY" "sample" "MATCH ()-[:works]->(e:employer) RETURN e" "--compact"\n 1632716792.044241 [0 172.17.0.1:57804] "GRAPH.QUERY" "sample" "CALL db.propertyKeys()"\n 1632716812.060458 [0 172.17.0.1:57962] "COMMAND"\n 1632716813.148710 [0 172.17.0.1:57962] "GRAPH.QUERY" "sample" "CREATE (:person {name: \'Jim\', age: 29})-[:works]->(:employer {name: \'Dunder Mifflin\'})" "--compact"\n\n')),(0,i.kt)("h3",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/howtos/redisgraphmovies/"},"Building Movies database app using RedisGraph and NodeJS")),(0,i.kt)("li",{parentName:"ul"},"Learn more about RedisGraph in the ",(0,i.kt)("a",{parentName:"li",href:"https://oss.redis.com/redisgraph/"},"Quickstart")," tutorial."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/explore/redisinsight/redisgraph"},"Query, Visualize and Manipulate Graphs using RedisGraph Browser Tool"))),(0,i.kt)("h2",{id:""}),(0,i.kt)("div",null,(0,i.kt)("a",{href:"https://launchpad.redis.com",target:"_blank",rel:"noopener",className:"link"}," ",(0,i.kt)("img",{src:"/img/launchpad.png",className:"thumb",loading:"lazy",alt:"Redis Launchpad"}))))}h.isMDXComponent=!0}}]);