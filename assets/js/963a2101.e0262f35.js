"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[728],{85162:function(e,t,s){s.d(t,{Z:function(){return r}});var a=s(67294),n=s(86010),i="tabItem_Ymn6";function r(e){var t=e.children,s=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(i,r),hidden:s},t)}},65488:function(e,t,s){s.d(t,{Z:function(){return p}});var a=s(87462),n=s(67294),i=s(86010),r=s(72389),o=s(67392),l=s(7094),d=s(12466),u="tabList__CuJ",m="tabItem_LNqP";function c(e){var t,s,r=e.lazy,c=e.block,p=e.defaultValue,h=e.values,g=e.groupId,f=e.className,k=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=h?h:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,o.l)(v,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var w=null===p?p:null!=(t=null!=p?p:null==(s=k.find((function(e){return e.props.default})))?void 0:s.props.value)?t:k[0].props.value;if(null!==w&&!v.some((function(e){return e.value===w})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,l.U)(),R=y.tabGroupChoices,N=y.setTabGroupChoices,I=(0,n.useState)(w),x=I[0],S=I[1],C=[],D=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var _=R[g];null!=_&&_!==x&&v.some((function(e){return e.value===_}))&&S(_)}var E=function(e){var t=e.currentTarget,s=C.indexOf(t),a=v[s].value;a!==x&&(D(t),S(a),null!=g&&N(g,String(a)))},T=function(e){var t,s=null;switch(e.key){case"ArrowRight":var a,n=C.indexOf(e.currentTarget)+1;s=null!=(a=C[n])?a:C[0];break;case"ArrowLeft":var i,r=C.indexOf(e.currentTarget)-1;s=null!=(i=C[r])?i:C[C.length-1]}null==(t=s)||t.focus()};return n.createElement("div",{className:(0,i.Z)("tabs-container",u)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},f)},v.map((function(e){var t=e.value,s=e.label,r=e.attributes;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:function(e){return C.push(e)},onKeyDown:T,onFocus:E,onClick:E},r,{className:(0,i.Z)("tabs__item",m,null==r?void 0:r.className,{"tabs__item--active":x===t})}),null!=s?s:t)}))),r?(0,n.cloneElement)(k.filter((function(e){return e.props.value===x}))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function p(e){var t=(0,r.Z)();return n.createElement(c,(0,a.Z)({key:String(t)},e))}},1203:function(e,t,s){s.d(t,{Z:function(){return h}});var a=s(67294),n=s(3905),i=s(48811),r="riContainer_bco2",o="riDescriptionShort_E27B",l="riDetail_wzFs",d="riIcon_yDou",u="riTitle_x6vI",m="riDescription_RDnu",c="riMore_apRP",p=s(86010),h=function(e){var t=a.useState(!1),s=t[0],h=t[1];return a.createElement("a",{href:e.page,className:r},a.createElement("div",{className:o},a.createElement("div",{className:d},a.createElement("span",{className:"fe fe-zap"})),a.createElement("div",{className:l},a.createElement("div",{className:u},a.createElement("a",{href:e.page},e.title)),a.createElement("div",{className:m},e.description,a.Children.count(e.children)>0&&a.createElement("span",{className:(0,p.Z)(c,"fe","fe-more-horizontal"),onClick:function(){return h(!s)}})))),s&&a.createElement("div",{className:"ri-description-long"},a.createElement(n.Zo,{components:i.Z},e.children)))}},87567:function(e,t,s){s.r(t),s.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return m}});var a=s(87462),n=s(63366),i=(s(67294),s(3905)),r=(s(65488),s(85162),s(44996),s(1203),["components"]),o={id:"index-streams",title:"Use Redis Streams Consumer Groups with RedisInsight",sidebar_label:"Use Redis Streams Consumer Groups with RedisInsight",slug:"/explore/redisinsight/streams",authors:["ajeet"]},l=void 0,d={unversionedId:"explore/redisinsight/streams/index-streams",id:"explore/redisinsight/streams/index-streams",title:"Use Redis Streams Consumer Groups with RedisInsight",description:"Redis is an open source, in-memory, key-value data store most commonly used as a primary database, cache, message broker, and message queue. Redis cache delivers sub-millisecond response times, enabling fast and powerful real-time applications in industries such as gaming, fintech, ad-tech, social media, healthcare, and IoT. The Stream is a new data type introduced with Redis 5.0, which models a log data structure in a more abstract way.",source:"@site/docs/explore/redisinsight/streams/index-streams.mdx",sourceDirName:"explore/redisinsight/streams",slug:"/explore/redisinsight/streams",permalink:"/explore/redisinsight/streams",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/explore/redisinsight/streams/index-streams.mdx",tags:[],version:"current",lastUpdatedAt:1655485542,formattedLastUpdatedAt:"6/17/2022",frontMatter:{id:"index-streams",title:"Use Redis Streams Consumer Groups with RedisInsight",sidebar_label:"Use Redis Streams Consumer Groups with RedisInsight",slug:"/explore/redisinsight/streams",authors:["ajeet"]},sidebar:"docs",previous:{title:"Manage Your Redis Cluster using RedisInsight Cluster Management Tool",permalink:"/explore/redisinsight/cluster"},next:{title:"RedisInsight Profiler Tool - Analyze Your Redis Commands Using Redis Monitor Command",permalink:"/explore/redisinsight/profiler"}},u={},m=[{value:"Prerequisite:",id:"prerequisite",level:2},{value:"Step 1. Run a Redis server",id:"step-1-run-a-redis-server",level:3},{value:"Step 2: Download RedisInsight",id:"step-2-download-redisinsight",level:2},{value:"Step 3. Cloning the repository",id:"step-3-cloning-the-repository",level:2},{value:"Step 4. Run the producer(Post a new message)",id:"step-4-run-the-producerpost-a-new-message",level:2},{value:"Step 5. Run the consumer(Consume messages)",id:"step-5-run-the-consumerconsume-messages",level:2},{value:"Step 6: Posting the new messages",id:"step-6-posting-the-new-messages",level:2},{value:"Additional Links",id:"additional-links",level:2}],c={toc:m};function p(e){var t=e.components,o=(0,n.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Redis is an open source, in-memory, key-value data store most commonly used as a primary database, cache, message broker, and message queue. Redis cache delivers sub-millisecond response times, enabling fast and powerful real-time applications in industries such as gaming, fintech, ad-tech, social media, healthcare, and IoT. The Stream is a new data type introduced with Redis 5.0, which models a log data structure in a more abstract way.\nA Redis Stream is a Redis data type that represents a log, so you can add new information and message in an append-only mode.\nRedis Streams lets you build \u201cKafka-like\u201d applications, which can:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create applications that publish and consume messages. Nothing extraordinary here, you could already do that with Redis Pub/Sub(Publisher/Subscriber)."),(0,i.kt)("li",{parentName:"ul"},"Consume messages that are published even when the client application (consumer) is not running. This is a big difference from Redis Pub/Sub."),(0,i.kt)("li",{parentName:"ul"},"Consume messages starting from a specific point. For example, read the whole history or only new messages.")),(0,i.kt)("p",null,"In addition, Redis Streams has the concept of a consumer group. Redis Streams consumer groups, like the similar concept in ",(0,i.kt)("a",{parentName:"p",href:"https://kafka.apache.org/"},"Apache Kafka"),", allows client applications to consume messages in a distributed fashion (multiple clients), making it easy to scale and create highly available systems."),(0,i.kt)("p",null,"Let\u2019s dive under the covers and see ",(0,i.kt)("a",{parentName:"p",href:"https://redis.io/topics/streams-intro"},"Redis Streams")," through the lens of RedisInsight. You will see how to use the ",(0,i.kt)("a",{parentName:"p",href:"https://developer.redis.com/develop/java/#using-lettuce"},"Lettuce Java client")," to publish and consume messages using consumer group.This is the first basic example that uses a single consumer."),(0,i.kt)("h2",{id:"prerequisite"},"Prerequisite:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://openjdk.java.net/install/"},"Install OpenJDK")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://maven.apache.org/install.html"},"Install Apache Maven")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.redis.com/create"},"Install Redis"))),(0,i.kt)("h3",{id:"step-1-run-a-redis-server"},"Step 1. Run a Redis server"),(0,i.kt)("p",null,"Redis is an open source, in-memory, key-value data store most commonly used as a primary database, cache, message broker, and queue. Redis delivers sub-millisecond response times, enabling fast and powerful real-time applications in industries such as gaming, fintech, ad-tech, social media, healthcare, and IoT. You can run a Redis database directly over your local mac os or in a container. If you have Docker installed in your sytem, type the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," docker run -d -p 6379:6379 redislabs/redismod\n")),(0,i.kt)("p",null,"You can connect to Redis server using the ",(0,i.kt)("inlineCode",{parentName:"p"},"redis-cli")," command like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," redis-cli\n")),(0,i.kt)("p",null,"The above command will make a connection to the Redis server. It will then present a prompt that allows you to run Redis commands.\nPlease note that you can connect to Redis server using multiple clients."),(0,i.kt)("h2",{id:"step-2-download-redisinsight"},"Step 2: Download RedisInsight"),(0,i.kt)("p",null,"To install RedisInsight on your local system, you need to first download the software from the Redis website."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://redis.com/redis-enterprise/redis-insight/#insight-form"},"Click this link ")," to access a form that allows you to select the operating system of your choice."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"My Image",src:s(67414).Z,width:"1464",height:"1256"})),(0,i.kt)("p",null,"Run the installer. After the web server starts, open http://YOUR_HOST_IP:8001 and add a Redis database connection."),(0,i.kt)("p",null,'Select "Connect to a Redis database"\n',(0,i.kt)("img",{alt:"My Image",src:s(23841).Z,width:"1790",height:"838"})),(0,i.kt)("p",null,"Enter the requested details, including Name, Host (endpoint), Port, and Password. Then click \u201cADD REDIS DATABASE\u201d."),(0,i.kt)("h2",{id:"step-3-cloning-the-repository"},"Step 3. Cloning the repository"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"}," git clone https://github.com/redis-developer/redis-streams-101-java\n cd redis-streams-101-java\n mvn clean verify\n")),(0,i.kt)("h2",{id:"step-4-run-the-producerpost-a-new-message"},"Step 4. Run the producer(Post a new message)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'\n mvn exec:java -Dexec.mainClass="com.kanibl.redis.streams.simple.RedisStreams101Producer" -Dexec.args="5"\n\n Downloaded from central: https://repo.maven.apache.org/maven2/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar (472 kB at 450 kB/s)\n Downloaded from central: https://repo.maven.apache.org/maven2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar (26 kB at 25 kB/s)\n Downloaded from central: https://repo.maven.apache.org/maven2/commons-codec/commons-codec/1.11/commons-codec-1.11.jar (335 kB at 313 kB/s)\n\n Sending 5 message(s)\n May 18, 2021 1:07:00 PM io.lettuce.core.EpollProvider <clinit>\n INFO: Starting without optional epoll library\n May 18, 2021 1:07:00 PM io.lettuce.core.KqueueProvider <clinit>\n INFO: Starting without optional kqueue library\n       Message 1621343220998-0 : {sensor_ts=1621343220975, loop_info=0, speed=15, direction=270} posted\n       Message 1621343221009-0 : {sensor_ts=1621343221007, loop_info=1, speed=15, direction=270} posted\n       Message 1621343221016-0 : {sensor_ts=1621343221011, loop_info=2, speed=15, direction=270} posted\n       Message 1621343221019-0 : {sensor_ts=1621343221017, loop_info=3, speed=15, direction=270} posted\n       Message 1621343221023-0 : {sensor_ts=1621343221021, loop_info=4, speed=15, direction=270} posted\n\n\n [INFO] ------------------------------------------------------------------------\n [INFO] BUILD SUCCESS\n [INFO] ------------------------------------------------------------------------\n [INFO] Total time:  9.102 s\n [INFO] Finished at: 2021-05-18T13:07:01Z\n [INFO] ------------------------------------------------------------------------\n\n')),(0,i.kt)("h2",{id:"step-5-run-the-consumerconsume-messages"},"Step 5. Run the consumer(Consume messages)"),(0,i.kt)("p",null,"Open a new terminal and run this command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\n mvn exec:java -Dexec.main\n")),(0,i.kt)("p",null,"The consumer will start and consume the message you just posted, and wait for any new messages."),(0,i.kt)("h2",{id:"step-6-posting-the-new-messages"},"Step 6: Posting the new messages"),(0,i.kt)("p",null,"In the first terminal, let us post new entries to a Redis stream:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},' mvn exec:java -Dexec.mainClass="com.kanibl.redis.streams.simple.RedisStreams101Producer" -Dexec.args="100"\n')),(0,i.kt)("p",null,"Let us try to visualise the latest message using the RedisInsight browser tool. Make sure \u2018Stream Data\u2019 is selected and select any one of the streams. For a specified stream, you\u2019ll find a table showing data in that stream along with a timestamp of when each entry was added."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"alt_text",src:s(34353).Z,width:"1600",height:"926"})),(0,i.kt)("p",null,"To see the processing side of the stream select \u2018Stream Data\u201d. You will see 105 records under the streaming data."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"alt_text",src:s(37145).Z,width:"512",height:"274"})),(0,i.kt)("p",null,"Click on \u201cConsumer Group\u201d to see application_1 as promising active consumers."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"alt_text",src:s(42808).Z,width:"1600",height:"1153"})),(0,i.kt)("p",null,"RedisInsight also provide you to select fields as shown under \u201cView Columns\u201d section."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"alt_text",src:s(87584).Z,width:"1600",height:"884"})),(0,i.kt)("p",null,"It also displays pending items/messages for the specific streams as shown above."),(0,i.kt)("h2",{id:"additional-links"},"Additional Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/explore/redisinsight/slowlog"},"Slowlog Configuration using RedisInsight")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/explore/redisinsight/browser"},"Explore Redis keys using RedisInsight browser tool")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/explore/redisinsight/memoryanalyzer"},"Memory Analysis using RedisInsight")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://redis.io/commands/xadd/"},"Add data to a Redis Stream using the XADD command")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://redis.io/commands/xreadgroup/"},"XREAD with support for consumer groups using XREADGROUP command")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://redis.io/commands/xread/"},"How to use the XREAD command (XREAD count)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://redis.io/commands/xack/"},"Remove one or multiple messages from consumer group using XACK command")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://redis.io/docs/manual/data-types/streams/#removing-single-items-from-a-stream"},"Removing single items from a stream using stream ID"))),(0,i.kt)("h2",{id:""}),(0,i.kt)("div",null,(0,i.kt)("a",{href:"https://launchpad.redis.com",target:"_blank",rel:"noopener",className:"link"}," ",(0,i.kt)("img",{src:"/img/launchpad.png",className:"thumb",loading:"lazy",alt:"Redis Launchpad"}))))}p.isMDXComponent=!0},34353:function(e,t,s){t.Z=s.p+"assets/images/image16-f836b92d6eb88d65708f265ceb5b3999.png"},37145:function(e,t,s){t.Z=s.p+"assets/images/image17-155c7a654363e8bc371e37c1791d7b82.png"},42808:function(e,t,s){t.Z=s.p+"assets/images/image18-c2bc893d9a93df35ab96cef4756bb0ba.png"},87584:function(e,t,s){t.Z=s.p+"assets/images/image19-efa23e18b80c286c2570b7e209d58a6b.png"},23841:function(e,t,s){t.Z=s.p+"assets/images/redisinsight4-c10ff2035f21df96053f824b1eefd790.png"},67414:function(e,t,s){t.Z=s.p+"assets/images/redisinsightinstall-b920e816c541305ea0ea2dd2593f5a0f.png"}}]);