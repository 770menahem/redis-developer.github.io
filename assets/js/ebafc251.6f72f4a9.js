"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[4089],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),l=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(n),g=a,m=p["".concat(d,".").concat(g)]||p[g]||u[g]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},18872:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],s={id:"index-gettingstarted",title:"1. Getting Started",sidebar_label:"1. Getting Started",slug:"/howtos/moviesdatabase/getting-started",authors:["ajeet"]},d=void 0,l={unversionedId:"howtos/moviesdatabase/getting-started/index-gettingstarted",id:"howtos/moviesdatabase/getting-started/index-gettingstarted",title:"1. Getting Started",description:"RediSearch is a real-time indexing and search engine.RediSearch provides a simple and fast way to index and query data using any field (secondary index), and do search and aggregation on an indexed dataset.",source:"@site/docs/howtos/moviesdatabase/getting-started/index-gettingstarted.mdx",sourceDirName:"howtos/moviesdatabase/getting-started",slug:"/howtos/moviesdatabase/getting-started",permalink:"/howtos/moviesdatabase/getting-started",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/moviesdatabase/getting-started/index-gettingstarted.mdx",tags:[],version:"current",lastUpdatedAt:1655485542,formattedLastUpdatedAt:"6/17/2022",frontMatter:{id:"index-gettingstarted",title:"1. Getting Started",sidebar_label:"1. Getting Started",slug:"/howtos/moviesdatabase/getting-started",authors:["ajeet"]},sidebar:"docs",previous:{title:"How to cache REST API responses Using Redis & NodeJS",permalink:"/howtos/caching"},next:{title:"2. Install Redisearch",permalink:"/howtos/moviesdatabase/install"}},c={},u=[],p={toc:u};function g(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://redisearch.io"},"RediSearch")," is a real-time indexing and search engine.RediSearch provides a simple and fast way to index and query data using any field (secondary index), and do search and aggregation on an indexed dataset.\nIn this tutorial you will learn how to install and use the ",(0,i.kt)("a",{parentName:"p",href:"https://redisearch.io"},"RediSearch")," module that provides an indexing and full text search engine for Redis.\nAs a bonus, this tutorial lets you discover the new major release (2.0) and see how to use it, in your application."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Install RediSearch 2.0 & Insert Data"),(0,i.kt)("li",{parentName:"ul"},"Create Index"),(0,i.kt)("li",{parentName:"ul"},"Query Data"),(0,i.kt)("li",{parentName:"ul"},"Manage Indexes"),(0,i.kt)("li",{parentName:"ul"},"Import Sample Dataset"),(0,i.kt)("li",{parentName:"ul"},"Querying the Movie Dataset"),(0,i.kt)("li",{parentName:"ul"},"Aggregation"),(0,i.kt)("li",{parentName:"ul"},"Advanced Options"),(0,i.kt)("li",{parentName:"ul"},"Sample Application")),(0,i.kt)("p",null,"Let's get started..."))}g.isMDXComponent=!0}}]);