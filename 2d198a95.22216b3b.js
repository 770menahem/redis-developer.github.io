(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{117:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return p}));var a=n(3),i=n(7),r=(n(0),n(274)),l=(n(279),n(280),n(275),n(276),{id:"index-fixed-window-reactive-lua",title:"Atomicity with Lua",sidebar_label:"Atomicity with Lua",slug:"/develop/java/spring/rate-limiting/fixed-window/reactive-lua"}),s={unversionedId:"develop/java/spring/rate-limiting/fixed-window/index-fixed-window-reactive-lua",id:"develop/java/spring/rate-limiting/fixed-window/index-fixed-window-reactive-lua",isDocsHomePage:!1,title:"Atomicity with Lua",description:"Author: Brian Sam-Bodden",source:"@site/docs/develop/java/spring/rate-limiting/fixed-window/index-fixed-window-reactive-lua.mdx",slug:"/develop/java/spring/rate-limiting/fixed-window/reactive-lua",permalink:"/develop/java/spring/rate-limiting/fixed-window/reactive-lua",editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/java/spring/rate-limiting/fixed-window/index-fixed-window-reactive-lua.mdx",version:"current",sidebar_label:"Atomicity with Lua",sidebar:"docs",previous:{title:"Reactive Implementation",permalink:"/develop/java/spring/rate-limiting/fixed-window/reactive"},next:{title:"Atomicity with Gears",permalink:"/develop/java/spring/rate-limiting/fixed-window/reactive-gears"}},o=[{value:"Improving atomicity and performance with Lua",id:"improving-atomicity-and-performance-with-lua",children:[]},{value:"Rate Limiting Lua Script",id:"rate-limiting-lua-script",children:[]},{value:"Redis Lua Scripts in Spring Data Redis",id:"redis-lua-scripts-in-spring-data-redis",children:[]},{value:"Modifying the Filter to use Lua",id:"modifying-the-filter-to-use-lua",children:[]},{value:"Applying the filter",id:"applying-the-filter",children:[]},{value:"Testing with curl",id:"testing-with-curl",children:[]}],c={toc:o};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Author: ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://twitter.com/bsbodden"}),"Brian Sam-Bodden")),Object(r.b)("h2",{id:"improving-atomicity-and-performance-with-lua"},"Improving atomicity and performance with Lua"),Object(r.b)("p",null,"One way to improve our implementation is by moving the responsibility of\nperforming the ",Object(r.b)("inlineCode",{parentName:"p"},"INCR")," and ",Object(r.b)("inlineCode",{parentName:"p"},"EXPIRE")," operations from the ",Object(r.b)("inlineCode",{parentName:"p"},"incrAndExpireKey"),"\nmethod, to a Lua script."),Object(r.b)("h2",{id:"rate-limiting-lua-script"},"Rate Limiting Lua Script"),Object(r.b)("p",null,"Redis has the ability to execute Lua scripts on the server side. Lua scripts\nare executed atomically, that is, no other script or command will run\nwhile a script is running, which gives us the same transactional semantics as ",Object(r.b)("inlineCode",{parentName:"p"},"MULTI")," / ",Object(r.b)("inlineCode",{parentName:"p"},"EXEC"),"."),Object(r.b)("p",null,"Below is a simple Lua script to encapsulate the rate limiting logic. The script returns ",Object(r.b)("inlineCode",{parentName:"p"},"true"),"\nif the request is to be rejected or ",Object(r.b)("inlineCode",{parentName:"p"},"false")," otherwise:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"-- rateLimiter.lua\nlocal key = KEYS[1]\nlocal requests = tonumber(redis.call('GET', key) or '-1')\nlocal max_requests = tonumber(ARGV[1])\nlocal expiry = tonumber(ARGV[2])\n\nif (requests == -1) or (requests < max_requests) then\n  redis.call('INCR', key)\n  redis.call('EXPIRE', key, expiry)\n  return false\nelse\n  return true\nend\n")),Object(r.b)("p",null,"Place the script under ",Object(r.b)("inlineCode",{parentName:"p"},"src/main/resources/scripts"),". Now, Let's break it down:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Lua scripts in Redis work with keys (",Object(r.b)("inlineCode",{parentName:"li"},"KEYS[]"),") and arguments (",Object(r.b)("inlineCode",{parentName:"li"},"ARGV[]"),") in our case\nwe are expecting one ",Object(r.b)("inlineCode",{parentName:"li"},"key")," in ",Object(r.b)("inlineCode",{parentName:"li"},"KEYS[1]")," (Lua arrays are 1-based)"),Object(r.b)("li",{parentName:"ol"},"We retrieve the quota for the key in ",Object(r.b)("inlineCode",{parentName:"li"},"requests")," by making a ",Object(r.b)("inlineCode",{parentName:"li"},"call")," to the ",Object(r.b)("inlineCode",{parentName:"li"},"GET")," command,\nreturning ",Object(r.b)("inlineCode",{parentName:"li"},"-1")," if the key does not exist, and converting the value to a number."),Object(r.b)("li",{parentName:"ol"},"The quota is passed as the first argument (",Object(r.b)("inlineCode",{parentName:"li"},"ARGV[1]"),") and stored in ",Object(r.b)("inlineCode",{parentName:"li"},"max_requests"),", the\nexpiry in seconds is the second argument and stored in ",Object(r.b)("inlineCode",{parentName:"li"},"expiry")),Object(r.b)("li",{parentName:"ol"},"The ",Object(r.b)("inlineCode",{parentName:"li"},"if")," statement checks whether the request is the first request in the time window or\nif the number of requests have not exceeded the quota, in which case we run the ",Object(r.b)("inlineCode",{parentName:"li"},"INCR"),"-",Object(r.b)("inlineCode",{parentName:"li"},"EXPIRE"),"\ncommands and retunr ",Object(r.b)("inlineCode",{parentName:"li"},"false")," (meaning we are not rate limiting and allowing the request through)."),Object(r.b)("li",{parentName:"ol"},"If they've exceeded the quote, then we rate limit by returning ",Object(r.b)("inlineCode",{parentName:"li"},"true"))),Object(r.b)("p",null,"If you want to learn more about Lua, see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.lua.org/pil/contents.html"}),"Programming in Lua"),"."),Object(r.b)("h2",{id:"redis-lua-scripts-in-spring-data-redis"},"Redis Lua Scripts in Spring Data Redis"),Object(r.b)("p",null,"Spring Data Redis supports Lua scripting via the class ",Object(r.b)("inlineCode",{parentName:"p"},"RedisScript"),". It handles serialization and intelligently\nuses the Redis script cache. The cache is populated using the ",Object(r.b)("inlineCode",{parentName:"p"},"SCRIPT LOAD")," command. The default ",Object(r.b)("inlineCode",{parentName:"p"},"ScriptExecutor"),"\nuses ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://redis.io/commands/evalsha"}),Object(r.b)("inlineCode",{parentName:"a"},"EVALSHA"))," using the SHA1 of the script and falling back to\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://redis.io/commands/eval"}),Object(r.b)("inlineCode",{parentName:"a"},"EVAL"))," if the script has not yet been loaded into the cache."),Object(r.b)("p",null,"Let's add the bean annotated method ",Object(r.b)("inlineCode",{parentName:"p"},"script()")," to load our script from the classpath:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Bean\npublic RedisScript<Boolean> script() {\n  return RedisScript.of(new ClassPathResource("scripts/rateLimiter.lua"), Boolean.class);\n}\n')),Object(r.b)("h2",{id:"modifying-the-filter-to-use-lua"},"Modifying the Filter to use Lua"),Object(r.b)("p",null,"Next, we'll modify the filter to include the script as well as the quota; the value that we need to pass to the script:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"class RateLimiterHandlerFilterFunction implements HandlerFilterFunction<ServerResponse, ServerResponse> {\n\n  private ReactiveRedisTemplate<String, Long> redisTemplate;\n  private RedisScript<Boolean> script;\n  private Long maxRequestPerMinute;\n\n  public RateLimiterHandlerFilterFunction(ReactiveRedisTemplate<String, Long> redisTemplate,\n      RedisScript<Boolean> script, Long maxRequestPerMinute) {\n    this.redisTemplate = redisTemplate;\n    this.script = script;\n    this.maxRequestPerMinute = maxRequestPerMinute;\n  }\n")),Object(r.b)("p",null,"Now we can modify the ",Object(r.b)("inlineCode",{parentName:"p"},"filter")," method to use the script. Scripts are run using the execute methods of\n",Object(r.b)("inlineCode",{parentName:"p"},"RedisTemplate")," or ",Object(r.b)("inlineCode",{parentName:"p"},"ReactiveRedisTemplate"),". The ",Object(r.b)("inlineCode",{parentName:"p"},"execute")," methods use a configurable ",Object(r.b)("inlineCode",{parentName:"p"},"ScriptExecutor"),"/",Object(r.b)("inlineCode",{parentName:"p"},"ReactiveScriptExecutor"),"\nthat inherits the key and value serialization setting of the template to run the scripts:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Override\npublic Mono<ServerResponse> filter(ServerRequest request, HandlerFunction<ServerResponse> next) {\n  int currentMinute = LocalTime.now().getMinute();\n  String key = String.format("rl_%s:%s", requestAddress(request.remoteAddress()), currentMinute);\n\n  return redisTemplate //\n      .execute(script, List.of(key), List.of(maxRequestPerMinute, 59)) //\n      .single(false) //\n      .flatMap(value -> value ? //\n          ServerResponse.status(TOO_MANY_REQUESTS).build() : //\n          next.handle(request));\n}\n')),Object(r.b)("p",null,"Let's break down the method additions:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"The ",Object(r.b)("inlineCode",{parentName:"li"},"filter")," method uses the template ",Object(r.b)("inlineCode",{parentName:"li"},"execute")," method passing the script, keys and arguments."),Object(r.b)("li",{parentName:"ol"},"We expect a ",Object(r.b)("inlineCode",{parentName:"li"},"single")," result (",Object(r.b)("inlineCode",{parentName:"li"},"true")," or ",Object(r.b)("inlineCode",{parentName:"li"},"false"),"). The ",Object(r.b)("inlineCode",{parentName:"li"},"single")," method takes a default value to\nbe returned in case we get an empty result."),Object(r.b)("li",{parentName:"ol"},"Finally, we use the ",Object(r.b)("inlineCode",{parentName:"li"},"flatMap")," method to grab the value:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"If it is ",Object(r.b)("inlineCode",{parentName:"li"},"true")," we reject the request with an HTTP 429."),Object(r.b)("li",{parentName:"ul"},"If it is ",Object(r.b)("inlineCode",{parentName:"li"},"false")," we handle the request")))),Object(r.b)("h2",{id:"applying-the-filter"},"Applying the filter"),Object(r.b)("p",null,"Let's add a configurable ",Object(r.b)("inlineCode",{parentName:"p"},"@Value")," annotated ",Object(r.b)("inlineCode",{parentName:"p"},"Long")," value to the ",Object(r.b)("inlineCode",{parentName:"p"},"FixedWindowRateLimiterApplication")," to\nhold the request quota."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Value("${MAX_REQUESTS_PER_MINUTE}")\nLong maxRequestPerMinute;\n')),Object(r.b)("p",null,"In our ",Object(r.b)("inlineCode",{parentName:"p"},"application.properties")," we'll set it to a max of 20 request per minute:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"MAX_REQUESTS_PER_MINUTE=20\n")),Object(r.b)("p",null,"To invoke the filter we use the newly modified constructor, passing the template, the script, and the\n",Object(r.b)("inlineCode",{parentName:"p"},"maxRequestPerMinute")," value:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'@Bean\nRouterFunction<ServerResponse> routes() {\n  return route() //\n      .GET("/api/ping", r -> ok() //\n          .contentType(TEXT_PLAIN) //\n          .body(BodyInserters.fromValue("PONG")) //\n      ).filter(new RateLimiterHandlerFilterFunction(redisTemplate, script(), maxRequestPerMinute)).build();\n}\n')),Object(r.b)("h2",{id:"testing-with-curl"},"Testing with curl"),Object(r.b)("p",null,"Using our trusty curl loop:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'for n in {1..22}; do echo $(curl -s -w " :: HTTP %{http_code}, %{size_download} bytes, %{time_total} s" -X GET http://localhost:8080/api/ping); sleep 0.5; done\n')),Object(r.b)("p",null,"You should see the 21st request being rejected:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'\u279c for n in {1..22}; do echo $(curl -s -w " :: HTTP %{http_code}, %{size_download} bytes, %{time_total} s" -X GET http://localhost:8080/api/ping); sleep 0.5; done\nPONG :: HTTP 200, 4 bytes, 0.173759 s\nPONG :: HTTP 200, 4 bytes, 0.008903 s\nPONG :: HTTP 200, 4 bytes, 0.008796 s\nPONG :: HTTP 200, 4 bytes, 0.009625 s\nPONG :: HTTP 200, 4 bytes, 0.007604 s\nPONG :: HTTP 200, 4 bytes, 0.008052 s\nPONG :: HTTP 200, 4 bytes, 0.011364 s\nPONG :: HTTP 200, 4 bytes, 0.012158 s\nPONG :: HTTP 200, 4 bytes, 0.010415 s\nPONG :: HTTP 200, 4 bytes, 0.010373 s\nPONG :: HTTP 200, 4 bytes, 0.010009 s\nPONG :: HTTP 200, 4 bytes, 0.006587 s\nPONG :: HTTP 200, 4 bytes, 0.006807 s\nPONG :: HTTP 200, 4 bytes, 0.006970 s\nPONG :: HTTP 200, 4 bytes, 0.007948 s\nPONG :: HTTP 200, 4 bytes, 0.007949 s\nPONG :: HTTP 200, 4 bytes, 0.006606 s\nPONG :: HTTP 200, 4 bytes, 0.006336 s\nPONG :: HTTP 200, 4 bytes, 0.007855 s\nPONG :: HTTP 200, 4 bytes, 0.006515 s\n:: HTTP 429, 0 bytes, 0.006633 s\n:: HTTP 429, 0 bytes, 0.008264 s\n')),Object(r.b)("p",null,"If we run Redis in monitor mode, we should see the Lua calls to ",Object(r.b)("inlineCode",{parentName:"p"},"EVALSHA"),", followed by the call to ",Object(r.b)("inlineCode",{parentName:"p"},"GET")," for a rejected\nrequest, and the same plus calls to ",Object(r.b)("inlineCode",{parentName:"p"},"INCR")," and ",Object(r.b)("inlineCode",{parentName:"p"},"EXPIRE")," for an allowed request:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'1630342834.878972 [0 172.17.0.1:65008] "EVALSHA" "16832548450a4b1c5e23ffab55bddefe972fecd2" "1" "rl_localhost:0" "20" "59"\n1630342834.879044 [0 lua] "GET" "rl_localhost:0"\n1630342834.879091 [0 lua] "INCR" "rl_localhost:0"\n1630342834.879141 [0 lua] "EXPIRE" "rl_localhost:0" "59"\n1630342835.401937 [0 172.17.0.1:65008] "EVALSHA" "16832548450a4b1c5e23ffab55bddefe972fecd2" "1" "rl_localhost:0" "20" "59"\n1630342835.402009 [0 lua] "GET" "rl_localhost:0"\n')),Object(r.b)("p",null,"The complete code for this implementation is under the branch ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/redis-developer/fixed-window-rate-limiter/tree/with_lua"}),Object(r.b)("inlineCode",{parentName:"a"},"with_lua")),"."))}p.isMDXComponent=!0},276:function(e,t,n){"use strict";var a=n(0),i=n.n(a),r=n(274),l=n(282);n(275),n(55);t.a=function(e){var t=i.a.useState(!1),n=t[0],a=t[1];return i.a.createElement("div",{className:"ri-container"},i.a.createElement("div",{className:"ri-description-short"},i.a.createElement("div",{className:"ri-icon"},i.a.createElement("span",{className:"fe fe-zap"})),i.a.createElement("div",{className:"ri-detail"},i.a.createElement("div",{className:"ri-title"},i.a.createElement("a",{href:e.page},e.title)),i.a.createElement("div",{className:"ri-description"},e.description,i.a.Children.count(e.children)>0&&i.a.createElement("span",{className:"ri-more fe fe-more-horizontal",onClick:function(){return a(!n)}})))),n&&i.a.createElement("div",{className:"ri-description-long"},i.a.createElement(r.a,{components:l.a},e.children)))}},277:function(e,t,n){"use strict";var a=n(0),i=n(278);t.a=function(){var e=Object(a.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},278:function(e,t,n){"use strict";var a=n(0),i=Object(a.createContext)(void 0);t.a=i},279:function(e,t,n){"use strict";var a=n(0),i=n.n(a),r=n(277),l=n(281),s=n(56),o=n.n(s),c=37,p=39;t.a=function(e){var t=e.lazy,n=e.block,s=e.defaultValue,d=e.values,u=e.groupId,b=e.className,m=Object(r.a)(),h=m.tabGroupChoices,O=m.setTabGroupChoices,j=Object(a.useState)(s),f=j[0],N=j[1],g=a.Children.toArray(e.children);if(null!=u){var v=h[u];null!=v&&v!==f&&d.some((function(e){return e.value===v}))&&N(v)}var w=function(e){N(e),null!=u&&O(u,e)},T=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":n},b)},d.map((function(e){var t=e.value,n=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":f===t,className:Object(l.a)("tabs__item",o.a.tabItem,{"tabs__item--active":f===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case c:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(T,e.target,e)},onFocus:function(){return w(t)},onClick:function(){w(t)}},n)}))),t?Object(a.cloneElement)(g.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==f})}))))}},280:function(e,t,n){"use strict";var a=n(3),i=n(0),r=n.n(i);t.a=function(e){var t=e.children,n=e.hidden,i=e.className;return r.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:i}),t)}}}]);